<?php
/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product
 *
 * The service supports following operations: GET, POST, PUT, PATCH, DELETE. You can create, read, update, and delete product master data at the entity level.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\ProductODV4\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningTypeTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningType
 * @package     BeLenka\SAP\ProductODV4
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningType"
     */
    public function testComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product"
     */
    public function testPropertyProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plant"
     */
    public function testPropertyPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fixed_lot_size_quantity"
     */
    public function testPropertyFixedLotSizeQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_lot_size_quantity"
     */
    public function testPropertyMaximumLotSizeQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_lot_size_quantity"
     */
    public function testPropertyMinimumLotSizeQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lot_size_rounding_quantity"
     */
    public function testPropertyLotSizeRoundingQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lot_sizing_procedure"
     */
    public function testPropertyLotSizingProcedure()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mrp_type"
     */
    public function testPropertyMrpType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mrp_responsible"
     */
    public function testPropertyMrpResponsible()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "safety_stock_quantity"
     */
    public function testPropertySafetyStockQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_safety_stock_quantity"
     */
    public function testPropertyMinimumSafetyStockQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "planning_time_fence"
     */
    public function testPropertyPlanningTimeFence()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "consumption_value_category"
     */
    public function testPropertyConsumptionValueCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_stock_quantity"
     */
    public function testPropertyMaximumStockQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reorder_threshold_quantity"
     */
    public function testPropertyReorderThresholdQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "planned_delivery_duration_in_days"
     */
    public function testPropertyPlannedDeliveryDurationInDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "safety_supply_duration_in_days"
     */
    public function testPropertySafetySupplyDurationInDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "planning_strategy_group"
     */
    public function testPropertyPlanningStrategyGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_replenishment_lead_time"
     */
    public function testPropertyTotalReplenishmentLeadTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "procurement_type"
     */
    public function testPropertyProcurementType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "procurement_sub_type"
     */
    public function testPropertyProcurementSubType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "assembly_scrap_percent"
     */
    public function testPropertyAssemblyScrapPercent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "availability_check_type"
     */
    public function testPropertyAvailabilityCheckType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_receipt_duration"
     */
    public function testPropertyGoodsReceiptDuration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plan_and_order_day_determination"
     */
    public function testPropertyPlanAndOrderDayDetermination()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rounding_profile"
     */
    public function testPropertyRoundingProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dflt_storage_location_ext_procmt"
     */
    public function testPropertyDfltStorageLocationExtProcmt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mrp_group"
     */
    public function testPropertyMrpGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lot_size_independent_costs"
     */
    public function testPropertyLotSizeIndependentCosts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rqmt_qty_rcpt_takt_tme_in_wrkg_days"
     */
    public function testPropertyRqmtQtyRcptTaktTmeInWrkgDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mrp_planning_calendar"
     */
    public function testPropertyMrpPlanningCalendar()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "range_of_cvrg_prfl_code"
     */
    public function testPropertyRangeOfCvrgPrflCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_safety_time_mrp_relevance"
     */
    public function testPropertyProductSafetyTimeMrpRelevance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "safety_time_period_profile"
     */
    public function testPropertySafetyTimePeriodProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dependent_rqmt_mrp_relevance"
     */
    public function testPropertyDependentRqmtMrpRelevance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_service_level_in_percent"
     */
    public function testPropertyProductServiceLevelInPercent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_inh_prodn_duration_in_work_days"
     */
    public function testPropertyProdInhProdnDurationInWorkDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mrp_availability_type"
     */
    public function testPropertyMrpAvailabilityType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cross_project_product"
     */
    public function testPropertyCrossProjectProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storage_costs_percentage_code"
     */
    public function testPropertyStorageCostsPercentageCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "follow_up_product"
     */
    public function testPropertyFollowUpProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "repetitive_manufacturing_is_allwd"
     */
    public function testPropertyRepetitiveManufacturingIsAllwd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dependent_requirements_type"
     */
    public function testPropertyDependentRequirementsType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_is_bulk_component"
     */
    public function testPropertyProductIsBulkComponent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "repetitive_manufacturing_profile"
     */
    public function testPropertyRepetitiveManufacturingProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backward_cnsmpn_period_in_work_days"
     */
    public function testPropertyBackwardCnsmpnPeriodInWorkDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fwd_consumption_period_in_work_days"
     */
    public function testPropertyFwdConsumptionPeriodInWorkDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_rqmts_consumption_mode"
     */
    public function testPropertyProdRqmtsConsumptionMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_fcst_requirements_split_code"
     */
    public function testPropertyProdFcstRequirementsSplitCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effective_out_date"
     */
    public function testPropertyEffectiveOutDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "scheduling_float_profile"
     */
    public function testPropertySchedulingFloatProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "component_scrap_in_percent"
     */
    public function testPropertyComponentScrapInPercent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_discontinuation_code"
     */
    public function testPropertyProductDiscontinuationCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_requirements_grouping"
     */
    public function testPropertyProductRequirementsGrouping()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "production_invtry_managed_loc"
     */
    public function testPropertyProductionInvtryManagedLoc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_component_backflush_code"
     */
    public function testPropertyProductComponentBackflushCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "proposed_product_supply_area"
     */
    public function testPropertyProposedProductSupplyArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mrp_safety_stock_method"
     */
    public function testPropertyMrpSafetyStockMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "jit_prodn_conf_profile"
     */
    public function testPropertyJitProdnConfProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_unit"
     */
    public function testPropertyBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prodn_plng_and_control_calendar"
     */
    public function testPropertyProdnPlngAndControlCalendar()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_iso_unit"
     */
    public function testPropertyBaseIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "consignment_control"
     */
    public function testPropertyConsignmentControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "atp_check_horizon_in_days"
     */
    public function testPropertyAtpCheckHorizonInDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "atp_check_horizon_factory_calendar"
     */
    public function testPropertyAtpCheckHorizonFactoryCalendar()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product"
     */
    public function testPropertyProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_plant"
     */
    public function testPropertyProductPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
