<?php
/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product
 *
 * The service supports following operations: GET, POST, PUT, PATCH, DELETE. You can create, read, update, and delete product master data at the entity level.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\ProductODV4\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreateTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate
 * @package     BeLenka\SAP\ProductODV4
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate"
     */
    public function testComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product"
     */
    public function testPropertyProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_type"
     */
    public function testPropertyProductType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creation_date_time"
     */
    public function testPropertyCreationDateTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_marked_for_deletion"
     */
    public function testPropertyIsMarkedForDeletion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cross_plant_status"
     */
    public function testPropertyCrossPlantStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cross_plant_status_validity_date"
     */
    public function testPropertyCrossPlantStatusValidityDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_old_id"
     */
    public function testPropertyProductOldId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gross_weight"
     */
    public function testPropertyGrossWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "weight_unit"
     */
    public function testPropertyWeightUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "weight_iso_unit"
     */
    public function testPropertyWeightIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_group"
     */
    public function testPropertyProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_unit"
     */
    public function testPropertyBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_iso_unit"
     */
    public function testPropertyBaseIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_category_group"
     */
    public function testPropertyItemCategoryGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_weight"
     */
    public function testPropertyNetWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "division"
     */
    public function testPropertyDivision()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "volume_unit"
     */
    public function testPropertyVolumeUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "volume_iso_unit"
     */
    public function testPropertyVolumeIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_volume"
     */
    public function testPropertyProductVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorization_group"
     */
    public function testPropertyAuthorizationGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "anp_code"
     */
    public function testPropertyAnpCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "size_or_dimension_text"
     */
    public function testPropertySizeOrDimensionText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry_standard_name"
     */
    public function testPropertyIndustryStandardName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_standard_id"
     */
    public function testPropertyProductStandardId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_article_number_cat"
     */
    public function testPropertyInternationalArticleNumberCat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_is_configurable"
     */
    public function testPropertyProductIsConfigurable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_batch_management_required"
     */
    public function testPropertyIsBatchManagementRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "external_product_group"
     */
    public function testPropertyExternalProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cross_plant_configurable_product"
     */
    public function testPropertyCrossPlantConfigurableProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "serial_no_explicitness_level"
     */
    public function testPropertySerialNoExplicitnessLevel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_approved_batch_record_reqd"
     */
    public function testPropertyIsApprovedBatchRecordReqd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_indicator"
     */
    public function testPropertyHandlingIndicator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warehouse_product_group"
     */
    public function testPropertyWarehouseProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warehouse_storage_condition"
     */
    public function testPropertyWarehouseStorageCondition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "standard_handling_unit_type"
     */
    public function testPropertyStandardHandlingUnitType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "serial_number_profile"
     */
    public function testPropertySerialNumberProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_pilferable"
     */
    public function testPropertyIsPilferable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_relevant_for_hzds_substances"
     */
    public function testPropertyIsRelevantForHzdsSubstances()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quarantine_period"
     */
    public function testPropertyQuarantinePeriod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "time_unit_for_quarantine_period"
     */
    public function testPropertyTimeUnitForQuarantinePeriod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quarantine_period_iso_unit"
     */
    public function testPropertyQuarantinePeriodIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quality_inspection_group"
     */
    public function testPropertyQualityInspectionGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "handling_unit_type"
     */
    public function testPropertyHandlingUnitType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "has_variable_tare_weight"
     */
    public function testPropertyHasVariableTareWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_packaging_length"
     */
    public function testPropertyMaximumPackagingLength()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_packaging_width"
     */
    public function testPropertyMaximumPackagingWidth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_packaging_height"
     */
    public function testPropertyMaximumPackagingHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_capacity"
     */
    public function testPropertyMaximumCapacity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overcapacity_tolerance"
     */
    public function testPropertyOvercapacityTolerance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unit_for_max_packaging_dimensions"
     */
    public function testPropertyUnitForMaxPackagingDimensions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_packgg_dimension_iso_unit"
     */
    public function testPropertyMaxPackggDimensionIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_unit_specific_product_length"
     */
    public function testPropertyBaseUnitSpecificProductLength()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_unit_specific_product_width"
     */
    public function testPropertyBaseUnitSpecificProductWidth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_unit_specific_product_height"
     */
    public function testPropertyBaseUnitSpecificProductHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_measurement_unit"
     */
    public function testPropertyProductMeasurementUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_measurement_iso_unit"
     */
    public function testPropertyProductMeasurementIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "article_category"
     */
    public function testPropertyArticleCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "industry_sector"
     */
    public function testPropertyIndustrySector()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dangerous_goods_ind_profile"
     */
    public function testPropertyDangerousGoodsIndProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_document_change_number"
     */
    public function testPropertyProductDocumentChangeNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_document_page_count"
     */
    public function testPropertyProductDocumentPageCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_document_page_number"
     */
    public function testPropertyProductDocumentPageNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "document_is_created_by_cad"
     */
    public function testPropertyDocumentIsCreatedByCad()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "production_or_inspection_memo_txt"
     */
    public function testPropertyProductionOrInspectionMemoTxt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "production_memo_page_format"
     */
    public function testPropertyProductionMemoPageFormat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_is_highly_viscous"
     */
    public function testPropertyProductIsHighlyViscous()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transport_is_in_bulk"
     */
    public function testPropertyTransportIsInBulk()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_effcty_param_vals_are_assigned"
     */
    public function testPropertyProdEffctyParamValsAreAssigned()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_is_environmentally_relevant"
     */
    public function testPropertyProdIsEnvironmentallyRelevant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "laboratory_or_design_office"
     */
    public function testPropertyLaboratoryOrDesignOffice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packaging_product_group"
     */
    public function testPropertyPackagingProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "packing_reference_product"
     */
    public function testPropertyPackingReferenceProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "basic_product"
     */
    public function testPropertyBasicProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_document_number"
     */
    public function testPropertyProductDocumentNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_document_version"
     */
    public function testPropertyProductDocumentVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_document_type"
     */
    public function testPropertyProductDocumentType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_document_page_format"
     */
    public function testPropertyProductDocumentPageFormat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_chml_cmplnc_relevance_code"
     */
    public function testPropertyProdChmlCmplncRelevanceCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "discount_in_kind_eligibility"
     */
    public function testPropertyDiscountInKindEligibility()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_manufacturer_number"
     */
    public function testPropertyProductManufacturerNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manufacturer_number"
     */
    public function testPropertyManufacturerNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manufacturer_part_profile"
     */
    public function testPropertyManufacturerPartProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "own_inventory_managed_product"
     */
    public function testPropertyOwnInventoryManagedProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_change_master"
     */
    public function testPropertyProductChangeMaster()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_description"
     */
    public function testPropertyProductDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_ewm_warehouse"
     */
    public function testPropertyProductEwmWarehouse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_plant"
     */
    public function testPropertyProductPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_procurement"
     */
    public function testPropertyProductProcurement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_quality_management"
     */
    public function testPropertyProductQualityManagement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_sales"
     */
    public function testPropertyProductSales()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_sales_delivery"
     */
    public function testPropertyProductSalesDelivery()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_storage"
     */
    public function testPropertyProductStorage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_unit_of_measure"
     */
    public function testPropertyProductUnitOfMeasure()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_valuation"
     */
    public function testPropertyProductValuation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
