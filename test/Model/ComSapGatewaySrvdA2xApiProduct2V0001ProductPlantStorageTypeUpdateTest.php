<?php
/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeUpdateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product
 *
 * The service supports following operations: GET, POST, PUT, PATCH, DELETE. You can create, read, update, and delete product master data at the entity level.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\ProductODV4\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeUpdateTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeUpdate
 * @package     BeLenka\SAP\ProductODV4
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeUpdateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeUpdate"
     */
    public function testComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "phys_inventory_for_cycle_counting"
     */
    public function testPropertyPhysInventoryForCycleCounting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_storage_period"
     */
    public function testPropertyMaximumStoragePeriod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_maximum_storage_period_unit"
     */
    public function testPropertyProdMaximumStoragePeriodUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_storage_period_iso_unit"
     */
    public function testPropertyMaximumStoragePeriodIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cycle_counting_indicator_is_fixed"
     */
    public function testPropertyCycleCountingIndicatorIsFixed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
