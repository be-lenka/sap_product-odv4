<?php
/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductEWMStorageTypeTypeCreateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product
 *
 * The service supports following operations: GET, POST, PUT, PATCH, DELETE. You can create, read, update, and delete product master data at the entity level.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\ProductODV4\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductEWMStorageTypeTypeCreateTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiProduct2V0001ProductEWMStorageTypeTypeCreate
 * @package     BeLenka\SAP\ProductODV4
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiProduct2V0001ProductEWMStorageTypeTypeCreateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiProduct2V0001ProductEWMStorageTypeTypeCreate"
     */
    public function testComSapGatewaySrvdA2xApiProduct2V0001ProductEWMStorageTypeTypeCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_storage_type"
     */
    public function testPropertyEwmStorageType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_internal_uuid"
     */
    public function testPropertyProductInternalUuid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supply_chain_unit_uuid"
     */
    public function testPropertySupplyChainUnitUuid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_party_entitled_to_dispose_uuid"
     */
    public function testPropertyEwmPartyEntitledToDisposeUuid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_storage_section_method"
     */
    public function testPropertyEwmStorageSectionMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_storage_bin_type"
     */
    public function testPropertyEwmStorageBinType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_maximum_number_of_bins"
     */
    public function testPropertyEwmMaximumNumberOfBins()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_maximum_storage_quantity"
     */
    public function testPropertyEwmMaximumStorageQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_max_stor_quantity_base_unit"
     */
    public function testPropertyEwmMaxStorQuantityBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_max_stor_qty_base_unit_iso_code"
     */
    public function testPropertyEwmMaxStorQtyBaseUnitIsoCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_max_stor_quantity_display_unit"
     */
    public function testPropertyEwmMaxStorQuantityDisplayUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_max_storage_qty_dsp_unit_iso_code"
     */
    public function testPropertyEwmMaxStorageQtyDspUnitIsoCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_minimum_storage_quantity"
     */
    public function testPropertyEwmMinimumStorageQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_stor_quantity_base_unit"
     */
    public function testPropertyEwmMinStorQuantityBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_stor_qty_base_unit_iso_code"
     */
    public function testPropertyEwmMinStorQtyBaseUnitIsoCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_stor_quantity_display_unit"
     */
    public function testPropertyEwmMinStorQuantityDisplayUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_storage_qty_dsp_unit_iso_code"
     */
    public function testPropertyEwmMinStorageQtyDspUnitIsoCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_replnmt_quantity"
     */
    public function testPropertyEwmMinReplnmtQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_replnmt_qty_base_unit"
     */
    public function testPropertyEwmMinReplnmtQtyBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_replnmt_qty_bs_unit_iso_code"
     */
    public function testPropertyEwmMinReplnmtQtyBsUnitIsoCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_replnmt_qty_display_unit"
     */
    public function testPropertyEwmMinReplnmtQtyDisplayUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_replnmt_qty_dsp_unit_iso_code"
     */
    public function testPropertyEwmMinReplnmtQtyDspUnitIsoCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_min_stor_qty_of_max_stor_qty_in_pct"
     */
    public function testPropertyEwmMinStorQtyOfMaxStorQtyInPct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_splt_ptwy_threshold_in_percent"
     */
    public function testPropertyEwmSpltPtwyThresholdInPercent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_prod_is_split_on_ptwy"
     */
    public function testPropertyEwmProdIsSplitOnPtwy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_prod_is_skipped_on_ptwy"
     */
    public function testPropertyEwmProdIsSkippedOnPtwy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_has_no_replenishment"
     */
    public function testPropertyEwmHasNoReplenishment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_storage_bin_search_rule"
     */
    public function testPropertyEwmStorageBinSearchRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_prod_quantity_classification"
     */
    public function testPropertyEwmProdQuantityClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_prod_ptwy_qty_classification"
     */
    public function testPropertyEwmProdPtwyQtyClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ewm_ptwy_sequence"
     */
    public function testPropertyEwmPtwySequence()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product"
     */
    public function testPropertyProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_product_ewm_warehouse"
     */
    public function testPropertyProductEwmWarehouse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
