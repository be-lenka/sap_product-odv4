<?php
/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeUpdateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product
 *
 * The service supports following operations: GET, POST, PUT, PATCH, DELETE. You can create, read, update, and delete product master data at the entity level.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\ProductODV4\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeUpdateTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeUpdate
 * @package     BeLenka\SAP\ProductODV4
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeUpdateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeUpdate"
     */
    public function testComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_order_quantity"
     */
    public function testPropertyMinimumOrderQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplying_plant"
     */
    public function testPropertySupplyingPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "price_specification_product_group"
     */
    public function testPropertyPriceSpecificationProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "account_detn_product_group"
     */
    public function testPropertyAccountDetnProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_note_proc_min_deliv_qty"
     */
    public function testPropertyDeliveryNoteProcMinDelivQty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_category_group"
     */
    public function testPropertyItemCategoryGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_quantity_unit"
     */
    public function testPropertyDeliveryQuantityUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_quantity_iso_unit"
     */
    public function testPropertyDeliveryQuantityIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_quantity"
     */
    public function testPropertyDeliveryQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_sales_status"
     */
    public function testPropertyProductSalesStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_sales_status_validity_date"
     */
    public function testPropertyProductSalesStatusValidityDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_measure_unit"
     */
    public function testPropertySalesMeasureUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_measure_iso_unit"
     */
    public function testPropertySalesMeasureIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_marked_for_deletion"
     */
    public function testPropertyIsMarkedForDeletion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_sales_spec_product_group"
     */
    public function testPropertyFirstSalesSpecProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "second_sales_spec_product_group"
     */
    public function testPropertySecondSalesSpecProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "third_sales_spec_product_group"
     */
    public function testPropertyThirdSalesSpecProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fourth_sales_spec_product_group"
     */
    public function testPropertyFourthSalesSpecProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fifth_sales_spec_product_group"
     */
    public function testPropertyFifthSalesSpecProductGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logistics_statistics_group"
     */
    public function testPropertyLogisticsStatisticsGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "volume_rebate_group"
     */
    public function testPropertyVolumeRebateGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cash_discount_is_deductible"
     */
    public function testPropertyCashDiscountIsDeductible()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rounding_profile"
     */
    public function testPropertyRoundingProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "variable_sales_unit_is_not_allowed"
     */
    public function testPropertyVariableSalesUnitIsNotAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_commission_group"
     */
    public function testPropertyProductCommissionGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pricing_reference_product"
     */
    public function testPropertyPricingReferenceProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id01"
     */
    public function testPropertyProductHasAttributeId01()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id02"
     */
    public function testPropertyProductHasAttributeId02()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id03"
     */
    public function testPropertyProductHasAttributeId03()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id04"
     */
    public function testPropertyProductHasAttributeId04()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id05"
     */
    public function testPropertyProductHasAttributeId05()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id06"
     */
    public function testPropertyProductHasAttributeId06()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id07"
     */
    public function testPropertyProductHasAttributeId07()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id08"
     */
    public function testPropertyProductHasAttributeId08()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id09"
     */
    public function testPropertyProductHasAttributeId09()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_has_attribute_id10"
     */
    public function testPropertyProductHasAttributeId10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prod_is_entlmnt_rlvt"
     */
    public function testPropertyProdIsEntlmntRlvt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_unit"
     */
    public function testPropertyBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_iso_unit"
     */
    public function testPropertyBaseIsoUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
