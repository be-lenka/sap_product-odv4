<?php
/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product
 *
 * The service supports following operations: GET, POST, PUT, PATCH, DELETE. You can create, read, update, and delete product master data at the entity level.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\ProductODV4\Model;

use \ArrayAccess;
use \BeLenka\SAP\ProductODV4\ObjectSerializer;

/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'com.sap.gateway.srvd_a2x.api_product_2.v0001.ProductPlant_Type-create';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'plant' => 'string',
        'profile_code' => 'string',
        'profile_validity_start_date' => '\DateTime',
        'fiscal_year_variant' => 'string',
        'period_type' => 'string',
        'profit_center' => 'string',
        'is_marked_for_deletion' => 'bool',
        'configurable_product' => 'string',
        'stock_determination_group' => 'string',
        'is_batch_management_required' => 'bool',
        'serial_number_profile' => 'string',
        'is_negative_stock_allowed' => 'bool',
        'product_cfop_category' => 'string',
        'product_is_excise_tax_relevant' => 'bool',
        'goods_issue_unit' => 'string',
        'goods_issue_iso_unit' => 'string',
        'distr_cntr_distribution_profile' => 'string',
        'product_is_critical_prt' => 'bool',
        'product_logistics_handling_group' => 'string',
        'product_freight_group' => 'string',
        'original_batch_reference_product' => 'string',
        'origl_batch_management_is_required' => 'string',
        'base_unit' => 'string',
        'product_min_control_temperature' => '\BeLenka\SAP\ProductODV4\Model\MinTemperature',
        'product_max_control_temperature' => '\BeLenka\SAP\ProductODV4\Model\MaxTemperature',
        'product_control_temperature_unit' => 'string',
        'prod_ctrl_temperature_unit_iso_code' => 'string',
        'sap__messages' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]',
        '_prod_plant_international_trade' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProdPlntInternationalTradeTypeCreate',
        '_product' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate',
        '_product_plant_costing' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantCostingTypeCreate',
        '_product_plant_forecast' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantForecastTypeCreate',
        '_product_plant_insp_type_setting' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantInspTypSettingTypeCreate[]',
        '_product_plant_mrp' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantMRPTypeCreate[]',
        '_product_plant_planning' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantPlanningTypeCreate',
        '_product_plant_procurement' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate',
        '_product_plant_purchase_tax' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantPurchaseTaxTypeCreate[]',
        '_product_plant_quality_management' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantQualityManagementTypeCreate',
        '_product_plant_sales' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSalesTypeCreate',
        '_product_plant_storage' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeCreate',
        '_product_plant_storage_location' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageLocationTypeCreate[]',
        '_product_plant_supply_planning' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningTypeCreate',
        '_product_plant_work_scheduling' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantWorkSchedulingTypeCreate'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'plant' => null,
        'profile_code' => null,
        'profile_validity_start_date' => 'date',
        'fiscal_year_variant' => null,
        'period_type' => null,
        'profit_center' => null,
        'is_marked_for_deletion' => null,
        'configurable_product' => null,
        'stock_determination_group' => null,
        'is_batch_management_required' => null,
        'serial_number_profile' => null,
        'is_negative_stock_allowed' => null,
        'product_cfop_category' => null,
        'product_is_excise_tax_relevant' => null,
        'goods_issue_unit' => null,
        'goods_issue_iso_unit' => null,
        'distr_cntr_distribution_profile' => null,
        'product_is_critical_prt' => null,
        'product_logistics_handling_group' => null,
        'product_freight_group' => null,
        'original_batch_reference_product' => null,
        'origl_batch_management_is_required' => null,
        'base_unit' => null,
        'product_min_control_temperature' => null,
        'product_max_control_temperature' => null,
        'product_control_temperature_unit' => null,
        'prod_ctrl_temperature_unit_iso_code' => null,
        'sap__messages' => null,
        '_prod_plant_international_trade' => null,
        '_product' => null,
        '_product_plant_costing' => null,
        '_product_plant_forecast' => null,
        '_product_plant_insp_type_setting' => null,
        '_product_plant_mrp' => null,
        '_product_plant_planning' => null,
        '_product_plant_procurement' => null,
        '_product_plant_purchase_tax' => null,
        '_product_plant_quality_management' => null,
        '_product_plant_sales' => null,
        '_product_plant_storage' => null,
        '_product_plant_storage_location' => null,
        '_product_plant_supply_planning' => null,
        '_product_plant_work_scheduling' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'plant' => false,
		'profile_code' => false,
		'profile_validity_start_date' => true,
		'fiscal_year_variant' => false,
		'period_type' => false,
		'profit_center' => false,
		'is_marked_for_deletion' => false,
		'configurable_product' => false,
		'stock_determination_group' => false,
		'is_batch_management_required' => false,
		'serial_number_profile' => false,
		'is_negative_stock_allowed' => false,
		'product_cfop_category' => false,
		'product_is_excise_tax_relevant' => false,
		'goods_issue_unit' => false,
		'goods_issue_iso_unit' => false,
		'distr_cntr_distribution_profile' => false,
		'product_is_critical_prt' => false,
		'product_logistics_handling_group' => false,
		'product_freight_group' => false,
		'original_batch_reference_product' => false,
		'origl_batch_management_is_required' => false,
		'base_unit' => false,
		'product_min_control_temperature' => false,
		'product_max_control_temperature' => false,
		'product_control_temperature_unit' => false,
		'prod_ctrl_temperature_unit_iso_code' => false,
		'sap__messages' => false,
		'_prod_plant_international_trade' => true,
		'_product' => false,
		'_product_plant_costing' => true,
		'_product_plant_forecast' => true,
		'_product_plant_insp_type_setting' => false,
		'_product_plant_mrp' => false,
		'_product_plant_planning' => true,
		'_product_plant_procurement' => true,
		'_product_plant_purchase_tax' => false,
		'_product_plant_quality_management' => true,
		'_product_plant_sales' => true,
		'_product_plant_storage' => true,
		'_product_plant_storage_location' => false,
		'_product_plant_supply_planning' => true,
		'_product_plant_work_scheduling' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'plant' => 'Plant',
        'profile_code' => 'ProfileCode',
        'profile_validity_start_date' => 'ProfileValidityStartDate',
        'fiscal_year_variant' => 'FiscalYearVariant',
        'period_type' => 'PeriodType',
        'profit_center' => 'ProfitCenter',
        'is_marked_for_deletion' => 'IsMarkedForDeletion',
        'configurable_product' => 'ConfigurableProduct',
        'stock_determination_group' => 'StockDeterminationGroup',
        'is_batch_management_required' => 'IsBatchManagementRequired',
        'serial_number_profile' => 'SerialNumberProfile',
        'is_negative_stock_allowed' => 'IsNegativeStockAllowed',
        'product_cfop_category' => 'ProductCFOPCategory',
        'product_is_excise_tax_relevant' => 'ProductIsExciseTaxRelevant',
        'goods_issue_unit' => 'GoodsIssueUnit',
        'goods_issue_iso_unit' => 'GoodsIssueISOUnit',
        'distr_cntr_distribution_profile' => 'DistrCntrDistributionProfile',
        'product_is_critical_prt' => 'ProductIsCriticalPrt',
        'product_logistics_handling_group' => 'ProductLogisticsHandlingGroup',
        'product_freight_group' => 'ProductFreightGroup',
        'original_batch_reference_product' => 'OriginalBatchReferenceProduct',
        'origl_batch_management_is_required' => 'OriglBatchManagementIsRequired',
        'base_unit' => 'BaseUnit',
        'product_min_control_temperature' => 'ProductMinControlTemperature',
        'product_max_control_temperature' => 'ProductMaxControlTemperature',
        'product_control_temperature_unit' => 'ProductControlTemperatureUnit',
        'prod_ctrl_temperature_unit_iso_code' => 'ProdCtrlTemperatureUnitISOCode',
        'sap__messages' => 'SAP__Messages',
        '_prod_plant_international_trade' => '_ProdPlantInternationalTrade',
        '_product' => '_Product',
        '_product_plant_costing' => '_ProductPlantCosting',
        '_product_plant_forecast' => '_ProductPlantForecast',
        '_product_plant_insp_type_setting' => '_ProductPlantInspTypeSetting',
        '_product_plant_mrp' => '_ProductPlantMRP',
        '_product_plant_planning' => '_ProductPlantPlanning',
        '_product_plant_procurement' => '_ProductPlantProcurement',
        '_product_plant_purchase_tax' => '_ProductPlantPurchaseTax',
        '_product_plant_quality_management' => '_ProductPlantQualityManagement',
        '_product_plant_sales' => '_ProductPlantSales',
        '_product_plant_storage' => '_ProductPlantStorage',
        '_product_plant_storage_location' => '_ProductPlantStorageLocation',
        '_product_plant_supply_planning' => '_ProductPlantSupplyPlanning',
        '_product_plant_work_scheduling' => '_ProductPlantWorkScheduling'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'plant' => 'setPlant',
        'profile_code' => 'setProfileCode',
        'profile_validity_start_date' => 'setProfileValidityStartDate',
        'fiscal_year_variant' => 'setFiscalYearVariant',
        'period_type' => 'setPeriodType',
        'profit_center' => 'setProfitCenter',
        'is_marked_for_deletion' => 'setIsMarkedForDeletion',
        'configurable_product' => 'setConfigurableProduct',
        'stock_determination_group' => 'setStockDeterminationGroup',
        'is_batch_management_required' => 'setIsBatchManagementRequired',
        'serial_number_profile' => 'setSerialNumberProfile',
        'is_negative_stock_allowed' => 'setIsNegativeStockAllowed',
        'product_cfop_category' => 'setProductCfopCategory',
        'product_is_excise_tax_relevant' => 'setProductIsExciseTaxRelevant',
        'goods_issue_unit' => 'setGoodsIssueUnit',
        'goods_issue_iso_unit' => 'setGoodsIssueIsoUnit',
        'distr_cntr_distribution_profile' => 'setDistrCntrDistributionProfile',
        'product_is_critical_prt' => 'setProductIsCriticalPrt',
        'product_logistics_handling_group' => 'setProductLogisticsHandlingGroup',
        'product_freight_group' => 'setProductFreightGroup',
        'original_batch_reference_product' => 'setOriginalBatchReferenceProduct',
        'origl_batch_management_is_required' => 'setOriglBatchManagementIsRequired',
        'base_unit' => 'setBaseUnit',
        'product_min_control_temperature' => 'setProductMinControlTemperature',
        'product_max_control_temperature' => 'setProductMaxControlTemperature',
        'product_control_temperature_unit' => 'setProductControlTemperatureUnit',
        'prod_ctrl_temperature_unit_iso_code' => 'setProdCtrlTemperatureUnitIsoCode',
        'sap__messages' => 'setSapMessages',
        '_prod_plant_international_trade' => '_setProdPlantInternationalTrade',
        '_product' => '_setProduct',
        '_product_plant_costing' => '_setProductPlantCosting',
        '_product_plant_forecast' => '_setProductPlantForecast',
        '_product_plant_insp_type_setting' => '_setProductPlantInspTypeSetting',
        '_product_plant_mrp' => '_setProductPlantMrp',
        '_product_plant_planning' => '_setProductPlantPlanning',
        '_product_plant_procurement' => '_setProductPlantProcurement',
        '_product_plant_purchase_tax' => '_setProductPlantPurchaseTax',
        '_product_plant_quality_management' => '_setProductPlantQualityManagement',
        '_product_plant_sales' => '_setProductPlantSales',
        '_product_plant_storage' => '_setProductPlantStorage',
        '_product_plant_storage_location' => '_setProductPlantStorageLocation',
        '_product_plant_supply_planning' => '_setProductPlantSupplyPlanning',
        '_product_plant_work_scheduling' => '_setProductPlantWorkScheduling'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'plant' => 'getPlant',
        'profile_code' => 'getProfileCode',
        'profile_validity_start_date' => 'getProfileValidityStartDate',
        'fiscal_year_variant' => 'getFiscalYearVariant',
        'period_type' => 'getPeriodType',
        'profit_center' => 'getProfitCenter',
        'is_marked_for_deletion' => 'getIsMarkedForDeletion',
        'configurable_product' => 'getConfigurableProduct',
        'stock_determination_group' => 'getStockDeterminationGroup',
        'is_batch_management_required' => 'getIsBatchManagementRequired',
        'serial_number_profile' => 'getSerialNumberProfile',
        'is_negative_stock_allowed' => 'getIsNegativeStockAllowed',
        'product_cfop_category' => 'getProductCfopCategory',
        'product_is_excise_tax_relevant' => 'getProductIsExciseTaxRelevant',
        'goods_issue_unit' => 'getGoodsIssueUnit',
        'goods_issue_iso_unit' => 'getGoodsIssueIsoUnit',
        'distr_cntr_distribution_profile' => 'getDistrCntrDistributionProfile',
        'product_is_critical_prt' => 'getProductIsCriticalPrt',
        'product_logistics_handling_group' => 'getProductLogisticsHandlingGroup',
        'product_freight_group' => 'getProductFreightGroup',
        'original_batch_reference_product' => 'getOriginalBatchReferenceProduct',
        'origl_batch_management_is_required' => 'getOriglBatchManagementIsRequired',
        'base_unit' => 'getBaseUnit',
        'product_min_control_temperature' => 'getProductMinControlTemperature',
        'product_max_control_temperature' => 'getProductMaxControlTemperature',
        'product_control_temperature_unit' => 'getProductControlTemperatureUnit',
        'prod_ctrl_temperature_unit_iso_code' => 'getProdCtrlTemperatureUnitIsoCode',
        'sap__messages' => 'getSapMessages',
        '_prod_plant_international_trade' => '_getProdPlantInternationalTrade',
        '_product' => '_getProduct',
        '_product_plant_costing' => '_getProductPlantCosting',
        '_product_plant_forecast' => '_getProductPlantForecast',
        '_product_plant_insp_type_setting' => '_getProductPlantInspTypeSetting',
        '_product_plant_mrp' => '_getProductPlantMrp',
        '_product_plant_planning' => '_getProductPlantPlanning',
        '_product_plant_procurement' => '_getProductPlantProcurement',
        '_product_plant_purchase_tax' => '_getProductPlantPurchaseTax',
        '_product_plant_quality_management' => '_getProductPlantQualityManagement',
        '_product_plant_sales' => '_getProductPlantSales',
        '_product_plant_storage' => '_getProductPlantStorage',
        '_product_plant_storage_location' => '_getProductPlantStorageLocation',
        '_product_plant_supply_planning' => '_getProductPlantSupplyPlanning',
        '_product_plant_work_scheduling' => '_getProductPlantWorkScheduling'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('plant', $data ?? [], null);
        $this->setIfExists('profile_code', $data ?? [], null);
        $this->setIfExists('profile_validity_start_date', $data ?? [], null);
        $this->setIfExists('fiscal_year_variant', $data ?? [], null);
        $this->setIfExists('period_type', $data ?? [], null);
        $this->setIfExists('profit_center', $data ?? [], null);
        $this->setIfExists('is_marked_for_deletion', $data ?? [], null);
        $this->setIfExists('configurable_product', $data ?? [], null);
        $this->setIfExists('stock_determination_group', $data ?? [], null);
        $this->setIfExists('is_batch_management_required', $data ?? [], null);
        $this->setIfExists('serial_number_profile', $data ?? [], null);
        $this->setIfExists('is_negative_stock_allowed', $data ?? [], null);
        $this->setIfExists('product_cfop_category', $data ?? [], null);
        $this->setIfExists('product_is_excise_tax_relevant', $data ?? [], null);
        $this->setIfExists('goods_issue_unit', $data ?? [], null);
        $this->setIfExists('goods_issue_iso_unit', $data ?? [], null);
        $this->setIfExists('distr_cntr_distribution_profile', $data ?? [], null);
        $this->setIfExists('product_is_critical_prt', $data ?? [], null);
        $this->setIfExists('product_logistics_handling_group', $data ?? [], null);
        $this->setIfExists('product_freight_group', $data ?? [], null);
        $this->setIfExists('original_batch_reference_product', $data ?? [], null);
        $this->setIfExists('origl_batch_management_is_required', $data ?? [], null);
        $this->setIfExists('base_unit', $data ?? [], null);
        $this->setIfExists('product_min_control_temperature', $data ?? [], null);
        $this->setIfExists('product_max_control_temperature', $data ?? [], null);
        $this->setIfExists('product_control_temperature_unit', $data ?? [], null);
        $this->setIfExists('prod_ctrl_temperature_unit_iso_code', $data ?? [], null);
        $this->setIfExists('sap__messages', $data ?? [], null);
        $this->setIfExists('_prod_plant_international_trade', $data ?? [], null);
        $this->setIfExists('_product', $data ?? [], null);
        $this->setIfExists('_product_plant_costing', $data ?? [], null);
        $this->setIfExists('_product_plant_forecast', $data ?? [], null);
        $this->setIfExists('_product_plant_insp_type_setting', $data ?? [], null);
        $this->setIfExists('_product_plant_mrp', $data ?? [], null);
        $this->setIfExists('_product_plant_planning', $data ?? [], null);
        $this->setIfExists('_product_plant_procurement', $data ?? [], null);
        $this->setIfExists('_product_plant_purchase_tax', $data ?? [], null);
        $this->setIfExists('_product_plant_quality_management', $data ?? [], null);
        $this->setIfExists('_product_plant_sales', $data ?? [], null);
        $this->setIfExists('_product_plant_storage', $data ?? [], null);
        $this->setIfExists('_product_plant_storage_location', $data ?? [], null);
        $this->setIfExists('_product_plant_supply_planning', $data ?? [], null);
        $this->setIfExists('_product_plant_work_scheduling', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['plant'] === null) {
            $invalidProperties[] = "'plant' can't be null";
        }
        if ((mb_strlen($this->container['plant']) > 4)) {
            $invalidProperties[] = "invalid value for 'plant', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['profile_code']) && (mb_strlen($this->container['profile_code']) > 2)) {
            $invalidProperties[] = "invalid value for 'profile_code', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['fiscal_year_variant']) && (mb_strlen($this->container['fiscal_year_variant']) > 2)) {
            $invalidProperties[] = "invalid value for 'fiscal_year_variant', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['period_type']) && (mb_strlen($this->container['period_type']) > 1)) {
            $invalidProperties[] = "invalid value for 'period_type', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['profit_center']) && (mb_strlen($this->container['profit_center']) > 10)) {
            $invalidProperties[] = "invalid value for 'profit_center', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['configurable_product']) && (mb_strlen($this->container['configurable_product']) > 18)) {
            $invalidProperties[] = "invalid value for 'configurable_product', the character length must be smaller than or equal to 18.";
        }

        if (!is_null($this->container['stock_determination_group']) && (mb_strlen($this->container['stock_determination_group']) > 4)) {
            $invalidProperties[] = "invalid value for 'stock_determination_group', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['serial_number_profile']) && (mb_strlen($this->container['serial_number_profile']) > 4)) {
            $invalidProperties[] = "invalid value for 'serial_number_profile', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['product_cfop_category']) && (mb_strlen($this->container['product_cfop_category']) > 2)) {
            $invalidProperties[] = "invalid value for 'product_cfop_category', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['goods_issue_unit']) && (mb_strlen($this->container['goods_issue_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'goods_issue_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['goods_issue_iso_unit']) && (mb_strlen($this->container['goods_issue_iso_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'goods_issue_iso_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['distr_cntr_distribution_profile']) && (mb_strlen($this->container['distr_cntr_distribution_profile']) > 3)) {
            $invalidProperties[] = "invalid value for 'distr_cntr_distribution_profile', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['product_logistics_handling_group']) && (mb_strlen($this->container['product_logistics_handling_group']) > 4)) {
            $invalidProperties[] = "invalid value for 'product_logistics_handling_group', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['product_freight_group']) && (mb_strlen($this->container['product_freight_group']) > 8)) {
            $invalidProperties[] = "invalid value for 'product_freight_group', the character length must be smaller than or equal to 8.";
        }

        if (!is_null($this->container['original_batch_reference_product']) && (mb_strlen($this->container['original_batch_reference_product']) > 18)) {
            $invalidProperties[] = "invalid value for 'original_batch_reference_product', the character length must be smaller than or equal to 18.";
        }

        if (!is_null($this->container['origl_batch_management_is_required']) && (mb_strlen($this->container['origl_batch_management_is_required']) > 1)) {
            $invalidProperties[] = "invalid value for 'origl_batch_management_is_required', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['base_unit']) && (mb_strlen($this->container['base_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'base_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['product_control_temperature_unit']) && (mb_strlen($this->container['product_control_temperature_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'product_control_temperature_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['prod_ctrl_temperature_unit_iso_code']) && (mb_strlen($this->container['prod_ctrl_temperature_unit_iso_code']) > 3)) {
            $invalidProperties[] = "invalid value for 'prod_ctrl_temperature_unit_iso_code', the character length must be smaller than or equal to 3.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets plant
     *
     * @return string
     */
    public function getPlant()
    {
        return $this->container['plant'];
    }

    /**
     * Sets plant
     *
     * @param string $plant plant
     *
     * @return self
     */
    public function setPlant($plant)
    {
        if (is_null($plant)) {
            throw new \InvalidArgumentException('non-nullable plant cannot be null');
        }
        if ((mb_strlen($plant) > 4)) {
            throw new \InvalidArgumentException('invalid length for $plant when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['plant'] = $plant;

        return $this;
    }

    /**
     * Gets profile_code
     *
     * @return string|null
     */
    public function getProfileCode()
    {
        return $this->container['profile_code'];
    }

    /**
     * Sets profile_code
     *
     * @param string|null $profile_code Plant-Specific Material Status
     *
     * @return self
     */
    public function setProfileCode($profile_code)
    {
        if (is_null($profile_code)) {
            throw new \InvalidArgumentException('non-nullable profile_code cannot be null');
        }
        if ((mb_strlen($profile_code) > 2)) {
            throw new \InvalidArgumentException('invalid length for $profile_code when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['profile_code'] = $profile_code;

        return $this;
    }

    /**
     * Gets profile_validity_start_date
     *
     * @return \DateTime|null
     */
    public function getProfileValidityStartDate()
    {
        return $this->container['profile_validity_start_date'];
    }

    /**
     * Sets profile_validity_start_date
     *
     * @param \DateTime|null $profile_validity_start_date Date from Which the Plant-Specific Material Status Is Valid
     *
     * @return self
     */
    public function setProfileValidityStartDate($profile_validity_start_date)
    {
        if (is_null($profile_validity_start_date)) {
            array_push($this->openAPINullablesSetToNull, 'profile_validity_start_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('profile_validity_start_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['profile_validity_start_date'] = $profile_validity_start_date;

        return $this;
    }

    /**
     * Gets fiscal_year_variant
     *
     * @return string|null
     */
    public function getFiscalYearVariant()
    {
        return $this->container['fiscal_year_variant'];
    }

    /**
     * Sets fiscal_year_variant
     *
     * @param string|null $fiscal_year_variant fiscal_year_variant
     *
     * @return self
     */
    public function setFiscalYearVariant($fiscal_year_variant)
    {
        if (is_null($fiscal_year_variant)) {
            throw new \InvalidArgumentException('non-nullable fiscal_year_variant cannot be null');
        }
        if ((mb_strlen($fiscal_year_variant) > 2)) {
            throw new \InvalidArgumentException('invalid length for $fiscal_year_variant when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['fiscal_year_variant'] = $fiscal_year_variant;

        return $this;
    }

    /**
     * Gets period_type
     *
     * @return string|null
     */
    public function getPeriodType()
    {
        return $this->container['period_type'];
    }

    /**
     * Sets period_type
     *
     * @param string|null $period_type period_type
     *
     * @return self
     */
    public function setPeriodType($period_type)
    {
        if (is_null($period_type)) {
            throw new \InvalidArgumentException('non-nullable period_type cannot be null');
        }
        if ((mb_strlen($period_type) > 1)) {
            throw new \InvalidArgumentException('invalid length for $period_type when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 1.');
        }

        $this->container['period_type'] = $period_type;

        return $this;
    }

    /**
     * Gets profit_center
     *
     * @return string|null
     */
    public function getProfitCenter()
    {
        return $this->container['profit_center'];
    }

    /**
     * Sets profit_center
     *
     * @param string|null $profit_center profit_center
     *
     * @return self
     */
    public function setProfitCenter($profit_center)
    {
        if (is_null($profit_center)) {
            throw new \InvalidArgumentException('non-nullable profit_center cannot be null');
        }
        if ((mb_strlen($profit_center) > 10)) {
            throw new \InvalidArgumentException('invalid length for $profit_center when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 10.');
        }

        $this->container['profit_center'] = $profit_center;

        return $this;
    }

    /**
     * Gets is_marked_for_deletion
     *
     * @return bool|null
     */
    public function getIsMarkedForDeletion()
    {
        return $this->container['is_marked_for_deletion'];
    }

    /**
     * Sets is_marked_for_deletion
     *
     * @param bool|null $is_marked_for_deletion Flag Material for Deletion at Plant Level
     *
     * @return self
     */
    public function setIsMarkedForDeletion($is_marked_for_deletion)
    {
        if (is_null($is_marked_for_deletion)) {
            throw new \InvalidArgumentException('non-nullable is_marked_for_deletion cannot be null');
        }
        $this->container['is_marked_for_deletion'] = $is_marked_for_deletion;

        return $this;
    }

    /**
     * Gets configurable_product
     *
     * @return string|null
     */
    public function getConfigurableProduct()
    {
        return $this->container['configurable_product'];
    }

    /**
     * Sets configurable_product
     *
     * @param string|null $configurable_product Configurable Material
     *
     * @return self
     */
    public function setConfigurableProduct($configurable_product)
    {
        if (is_null($configurable_product)) {
            throw new \InvalidArgumentException('non-nullable configurable_product cannot be null');
        }
        if ((mb_strlen($configurable_product) > 18)) {
            throw new \InvalidArgumentException('invalid length for $configurable_product when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 18.');
        }

        $this->container['configurable_product'] = $configurable_product;

        return $this;
    }

    /**
     * Gets stock_determination_group
     *
     * @return string|null
     */
    public function getStockDeterminationGroup()
    {
        return $this->container['stock_determination_group'];
    }

    /**
     * Sets stock_determination_group
     *
     * @param string|null $stock_determination_group Stock determination group
     *
     * @return self
     */
    public function setStockDeterminationGroup($stock_determination_group)
    {
        if (is_null($stock_determination_group)) {
            throw new \InvalidArgumentException('non-nullable stock_determination_group cannot be null');
        }
        if ((mb_strlen($stock_determination_group) > 4)) {
            throw new \InvalidArgumentException('invalid length for $stock_determination_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['stock_determination_group'] = $stock_determination_group;

        return $this;
    }

    /**
     * Gets is_batch_management_required
     *
     * @return bool|null
     */
    public function getIsBatchManagementRequired()
    {
        return $this->container['is_batch_management_required'];
    }

    /**
     * Sets is_batch_management_required
     *
     * @param bool|null $is_batch_management_required Batch Management Requirement Indicator for Plant
     *
     * @return self
     */
    public function setIsBatchManagementRequired($is_batch_management_required)
    {
        if (is_null($is_batch_management_required)) {
            throw new \InvalidArgumentException('non-nullable is_batch_management_required cannot be null');
        }
        $this->container['is_batch_management_required'] = $is_batch_management_required;

        return $this;
    }

    /**
     * Gets serial_number_profile
     *
     * @return string|null
     */
    public function getSerialNumberProfile()
    {
        return $this->container['serial_number_profile'];
    }

    /**
     * Sets serial_number_profile
     *
     * @param string|null $serial_number_profile Serial Number Profile
     *
     * @return self
     */
    public function setSerialNumberProfile($serial_number_profile)
    {
        if (is_null($serial_number_profile)) {
            throw new \InvalidArgumentException('non-nullable serial_number_profile cannot be null');
        }
        if ((mb_strlen($serial_number_profile) > 4)) {
            throw new \InvalidArgumentException('invalid length for $serial_number_profile when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['serial_number_profile'] = $serial_number_profile;

        return $this;
    }

    /**
     * Gets is_negative_stock_allowed
     *
     * @return bool|null
     */
    public function getIsNegativeStockAllowed()
    {
        return $this->container['is_negative_stock_allowed'];
    }

    /**
     * Sets is_negative_stock_allowed
     *
     * @param bool|null $is_negative_stock_allowed Negative stocks allowed in plant
     *
     * @return self
     */
    public function setIsNegativeStockAllowed($is_negative_stock_allowed)
    {
        if (is_null($is_negative_stock_allowed)) {
            throw new \InvalidArgumentException('non-nullable is_negative_stock_allowed cannot be null');
        }
        $this->container['is_negative_stock_allowed'] = $is_negative_stock_allowed;

        return $this;
    }

    /**
     * Gets product_cfop_category
     *
     * @return string|null
     */
    public function getProductCfopCategory()
    {
        return $this->container['product_cfop_category'];
    }

    /**
     * Sets product_cfop_category
     *
     * @param string|null $product_cfop_category Material CFOP category
     *
     * @return self
     */
    public function setProductCfopCategory($product_cfop_category)
    {
        if (is_null($product_cfop_category)) {
            throw new \InvalidArgumentException('non-nullable product_cfop_category cannot be null');
        }
        if ((mb_strlen($product_cfop_category) > 2)) {
            throw new \InvalidArgumentException('invalid length for $product_cfop_category when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['product_cfop_category'] = $product_cfop_category;

        return $this;
    }

    /**
     * Gets product_is_excise_tax_relevant
     *
     * @return bool|null
     */
    public function getProductIsExciseTaxRelevant()
    {
        return $this->container['product_is_excise_tax_relevant'];
    }

    /**
     * Sets product_is_excise_tax_relevant
     *
     * @param bool|null $product_is_excise_tax_relevant Excise Tax Relevance Indicator
     *
     * @return self
     */
    public function setProductIsExciseTaxRelevant($product_is_excise_tax_relevant)
    {
        if (is_null($product_is_excise_tax_relevant)) {
            throw new \InvalidArgumentException('non-nullable product_is_excise_tax_relevant cannot be null');
        }
        $this->container['product_is_excise_tax_relevant'] = $product_is_excise_tax_relevant;

        return $this;
    }

    /**
     * Gets goods_issue_unit
     *
     * @return string|null
     */
    public function getGoodsIssueUnit()
    {
        return $this->container['goods_issue_unit'];
    }

    /**
     * Sets goods_issue_unit
     *
     * @param string|null $goods_issue_unit Base Unit of Measure - No Conversion Routine
     *
     * @return self
     */
    public function setGoodsIssueUnit($goods_issue_unit)
    {
        if (is_null($goods_issue_unit)) {
            throw new \InvalidArgumentException('non-nullable goods_issue_unit cannot be null');
        }
        if ((mb_strlen($goods_issue_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $goods_issue_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['goods_issue_unit'] = $goods_issue_unit;

        return $this;
    }

    /**
     * Gets goods_issue_iso_unit
     *
     * @return string|null
     */
    public function getGoodsIssueIsoUnit()
    {
        return $this->container['goods_issue_iso_unit'];
    }

    /**
     * Sets goods_issue_iso_unit
     *
     * @param string|null $goods_issue_iso_unit Unit of issue in ISO code
     *
     * @return self
     */
    public function setGoodsIssueIsoUnit($goods_issue_iso_unit)
    {
        if (is_null($goods_issue_iso_unit)) {
            throw new \InvalidArgumentException('non-nullable goods_issue_iso_unit cannot be null');
        }
        if ((mb_strlen($goods_issue_iso_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $goods_issue_iso_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['goods_issue_iso_unit'] = $goods_issue_iso_unit;

        return $this;
    }

    /**
     * Gets distr_cntr_distribution_profile
     *
     * @return string|null
     */
    public function getDistrCntrDistributionProfile()
    {
        return $this->container['distr_cntr_distribution_profile'];
    }

    /**
     * Sets distr_cntr_distribution_profile
     *
     * @param string|null $distr_cntr_distribution_profile Distribution profile of material in plant
     *
     * @return self
     */
    public function setDistrCntrDistributionProfile($distr_cntr_distribution_profile)
    {
        if (is_null($distr_cntr_distribution_profile)) {
            throw new \InvalidArgumentException('non-nullable distr_cntr_distribution_profile cannot be null');
        }
        if ((mb_strlen($distr_cntr_distribution_profile) > 3)) {
            throw new \InvalidArgumentException('invalid length for $distr_cntr_distribution_profile when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['distr_cntr_distribution_profile'] = $distr_cntr_distribution_profile;

        return $this;
    }

    /**
     * Gets product_is_critical_prt
     *
     * @return bool|null
     */
    public function getProductIsCriticalPrt()
    {
        return $this->container['product_is_critical_prt'];
    }

    /**
     * Sets product_is_critical_prt
     *
     * @param bool|null $product_is_critical_prt Indicator: Critical part
     *
     * @return self
     */
    public function setProductIsCriticalPrt($product_is_critical_prt)
    {
        if (is_null($product_is_critical_prt)) {
            throw new \InvalidArgumentException('non-nullable product_is_critical_prt cannot be null');
        }
        $this->container['product_is_critical_prt'] = $product_is_critical_prt;

        return $this;
    }

    /**
     * Gets product_logistics_handling_group
     *
     * @return string|null
     */
    public function getProductLogisticsHandlingGroup()
    {
        return $this->container['product_logistics_handling_group'];
    }

    /**
     * Sets product_logistics_handling_group
     *
     * @param string|null $product_logistics_handling_group Logistics handling group for workload calculation
     *
     * @return self
     */
    public function setProductLogisticsHandlingGroup($product_logistics_handling_group)
    {
        if (is_null($product_logistics_handling_group)) {
            throw new \InvalidArgumentException('non-nullable product_logistics_handling_group cannot be null');
        }
        if ((mb_strlen($product_logistics_handling_group) > 4)) {
            throw new \InvalidArgumentException('invalid length for $product_logistics_handling_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['product_logistics_handling_group'] = $product_logistics_handling_group;

        return $this;
    }

    /**
     * Gets product_freight_group
     *
     * @return string|null
     */
    public function getProductFreightGroup()
    {
        return $this->container['product_freight_group'];
    }

    /**
     * Sets product_freight_group
     *
     * @param string|null $product_freight_group Material Freight Group
     *
     * @return self
     */
    public function setProductFreightGroup($product_freight_group)
    {
        if (is_null($product_freight_group)) {
            throw new \InvalidArgumentException('non-nullable product_freight_group cannot be null');
        }
        if ((mb_strlen($product_freight_group) > 8)) {
            throw new \InvalidArgumentException('invalid length for $product_freight_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 8.');
        }

        $this->container['product_freight_group'] = $product_freight_group;

        return $this;
    }

    /**
     * Gets original_batch_reference_product
     *
     * @return string|null
     */
    public function getOriginalBatchReferenceProduct()
    {
        return $this->container['original_batch_reference_product'];
    }

    /**
     * Sets original_batch_reference_product
     *
     * @param string|null $original_batch_reference_product Reference Material for Original Batches
     *
     * @return self
     */
    public function setOriginalBatchReferenceProduct($original_batch_reference_product)
    {
        if (is_null($original_batch_reference_product)) {
            throw new \InvalidArgumentException('non-nullable original_batch_reference_product cannot be null');
        }
        if ((mb_strlen($original_batch_reference_product) > 18)) {
            throw new \InvalidArgumentException('invalid length for $original_batch_reference_product when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 18.');
        }

        $this->container['original_batch_reference_product'] = $original_batch_reference_product;

        return $this;
    }

    /**
     * Gets origl_batch_management_is_required
     *
     * @return string|null
     */
    public function getOriglBatchManagementIsRequired()
    {
        return $this->container['origl_batch_management_is_required'];
    }

    /**
     * Sets origl_batch_management_is_required
     *
     * @param string|null $origl_batch_management_is_required Indicator for Original Batch Management
     *
     * @return self
     */
    public function setOriglBatchManagementIsRequired($origl_batch_management_is_required)
    {
        if (is_null($origl_batch_management_is_required)) {
            throw new \InvalidArgumentException('non-nullable origl_batch_management_is_required cannot be null');
        }
        if ((mb_strlen($origl_batch_management_is_required) > 1)) {
            throw new \InvalidArgumentException('invalid length for $origl_batch_management_is_required when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 1.');
        }

        $this->container['origl_batch_management_is_required'] = $origl_batch_management_is_required;

        return $this;
    }

    /**
     * Gets base_unit
     *
     * @return string|null
     */
    public function getBaseUnit()
    {
        return $this->container['base_unit'];
    }

    /**
     * Sets base_unit
     *
     * @param string|null $base_unit Base Unit of Measure - No Conversion Routine
     *
     * @return self
     */
    public function setBaseUnit($base_unit)
    {
        if (is_null($base_unit)) {
            throw new \InvalidArgumentException('non-nullable base_unit cannot be null');
        }
        if ((mb_strlen($base_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $base_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['base_unit'] = $base_unit;

        return $this;
    }

    /**
     * Gets product_min_control_temperature
     *
     * @return \BeLenka\SAP\ProductODV4\Model\MinTemperature|null
     */
    public function getProductMinControlTemperature()
    {
        return $this->container['product_min_control_temperature'];
    }

    /**
     * Sets product_min_control_temperature
     *
     * @param \BeLenka\SAP\ProductODV4\Model\MinTemperature|null $product_min_control_temperature product_min_control_temperature
     *
     * @return self
     */
    public function setProductMinControlTemperature($product_min_control_temperature)
    {
        if (is_null($product_min_control_temperature)) {
            throw new \InvalidArgumentException('non-nullable product_min_control_temperature cannot be null');
        }
        $this->container['product_min_control_temperature'] = $product_min_control_temperature;

        return $this;
    }

    /**
     * Gets product_max_control_temperature
     *
     * @return \BeLenka\SAP\ProductODV4\Model\MaxTemperature|null
     */
    public function getProductMaxControlTemperature()
    {
        return $this->container['product_max_control_temperature'];
    }

    /**
     * Sets product_max_control_temperature
     *
     * @param \BeLenka\SAP\ProductODV4\Model\MaxTemperature|null $product_max_control_temperature product_max_control_temperature
     *
     * @return self
     */
    public function setProductMaxControlTemperature($product_max_control_temperature)
    {
        if (is_null($product_max_control_temperature)) {
            throw new \InvalidArgumentException('non-nullable product_max_control_temperature cannot be null');
        }
        $this->container['product_max_control_temperature'] = $product_max_control_temperature;

        return $this;
    }

    /**
     * Gets product_control_temperature_unit
     *
     * @return string|null
     */
    public function getProductControlTemperatureUnit()
    {
        return $this->container['product_control_temperature_unit'];
    }

    /**
     * Sets product_control_temperature_unit
     *
     * @param string|null $product_control_temperature_unit Unit of Measure of Temperature
     *
     * @return self
     */
    public function setProductControlTemperatureUnit($product_control_temperature_unit)
    {
        if (is_null($product_control_temperature_unit)) {
            throw new \InvalidArgumentException('non-nullable product_control_temperature_unit cannot be null');
        }
        if ((mb_strlen($product_control_temperature_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $product_control_temperature_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['product_control_temperature_unit'] = $product_control_temperature_unit;

        return $this;
    }

    /**
     * Gets prod_ctrl_temperature_unit_iso_code
     *
     * @return string|null
     */
    public function getProdCtrlTemperatureUnitIsoCode()
    {
        return $this->container['prod_ctrl_temperature_unit_iso_code'];
    }

    /**
     * Sets prod_ctrl_temperature_unit_iso_code
     *
     * @param string|null $prod_ctrl_temperature_unit_iso_code prod_ctrl_temperature_unit_iso_code
     *
     * @return self
     */
    public function setProdCtrlTemperatureUnitIsoCode($prod_ctrl_temperature_unit_iso_code)
    {
        if (is_null($prod_ctrl_temperature_unit_iso_code)) {
            throw new \InvalidArgumentException('non-nullable prod_ctrl_temperature_unit_iso_code cannot be null');
        }
        if ((mb_strlen($prod_ctrl_temperature_unit_iso_code) > 3)) {
            throw new \InvalidArgumentException('invalid length for $prod_ctrl_temperature_unit_iso_code when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['prod_ctrl_temperature_unit_iso_code'] = $prod_ctrl_temperature_unit_iso_code;

        return $this;
    }

    /**
     * Gets sap__messages
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]|null
     */
    public function getSapMessages()
    {
        return $this->container['sap__messages'];
    }

    /**
     * Sets sap__messages
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]|null $sap__messages sap__messages
     *
     * @return self
     */
    public function setSapMessages($sap__messages)
    {
        if (is_null($sap__messages)) {
            throw new \InvalidArgumentException('non-nullable sap__messages cannot be null');
        }
        $this->container['sap__messages'] = $sap__messages;

        return $this;
    }

    /**
     * Gets _prod_plant_international_trade
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProdPlntInternationalTradeTypeCreate|null
     */
    public function _getProdPlantInternationalTrade()
    {
    return $this->container['_prod_plant_international_trade'];
    }

    /**
     * Sets _prod_plant_international_trade
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProdPlntInternationalTradeTypeCreate|null $_prod_plant_international_trade _prod_plant_international_trade
     *
     * @return self
     */
    public function _setProdPlantInternationalTrade($_prod_plant_international_trade)
    {
        if (is_null($_prod_plant_international_trade)) {
            array_push($this->openAPINullablesSetToNull, '_prod_plant_international_trade');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_prod_plant_international_trade', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_prod_plant_international_trade'] = $_prod_plant_international_trade;

        return $this;
    }

    /**
     * Gets _product
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate|null
     */
    public function _getProduct()
    {
    return $this->container['_product'];
    }

    /**
     * Sets _product
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate|null $_product _product
     *
     * @return self
     */
    public function _setProduct($_product)
    {
        if (is_null($_product)) {
            throw new \InvalidArgumentException('non-nullable _product cannot be null');
        }
        $this->container['_product'] = $_product;

        return $this;
    }

    /**
     * Gets _product_plant_costing
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantCostingTypeCreate|null
     */
    public function _getProductPlantCosting()
    {
    return $this->container['_product_plant_costing'];
    }

    /**
     * Sets _product_plant_costing
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantCostingTypeCreate|null $_product_plant_costing _product_plant_costing
     *
     * @return self
     */
    public function _setProductPlantCosting($_product_plant_costing)
    {
        if (is_null($_product_plant_costing)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_costing');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_costing', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_costing'] = $_product_plant_costing;

        return $this;
    }

    /**
     * Gets _product_plant_forecast
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantForecastTypeCreate|null
     */
    public function _getProductPlantForecast()
    {
    return $this->container['_product_plant_forecast'];
    }

    /**
     * Sets _product_plant_forecast
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantForecastTypeCreate|null $_product_plant_forecast _product_plant_forecast
     *
     * @return self
     */
    public function _setProductPlantForecast($_product_plant_forecast)
    {
        if (is_null($_product_plant_forecast)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_forecast');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_forecast', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_forecast'] = $_product_plant_forecast;

        return $this;
    }

    /**
     * Gets _product_plant_insp_type_setting
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantInspTypSettingTypeCreate[]|null
     */
    public function _getProductPlantInspTypeSetting()
    {
    return $this->container['_product_plant_insp_type_setting'];
    }

    /**
     * Sets _product_plant_insp_type_setting
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantInspTypSettingTypeCreate[]|null $_product_plant_insp_type_setting _product_plant_insp_type_setting
     *
     * @return self
     */
    public function _setProductPlantInspTypeSetting($_product_plant_insp_type_setting)
    {
        if (is_null($_product_plant_insp_type_setting)) {
            throw new \InvalidArgumentException('non-nullable _product_plant_insp_type_setting cannot be null');
        }
        $this->container['_product_plant_insp_type_setting'] = $_product_plant_insp_type_setting;

        return $this;
    }

    /**
     * Gets _product_plant_mrp
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantMRPTypeCreate[]|null
     */
    public function _getProductPlantMrp()
    {
    return $this->container['_product_plant_mrp'];
    }

    /**
     * Sets _product_plant_mrp
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantMRPTypeCreate[]|null $_product_plant_mrp _product_plant_mrp
     *
     * @return self
     */
    public function _setProductPlantMrp($_product_plant_mrp)
    {
        if (is_null($_product_plant_mrp)) {
            throw new \InvalidArgumentException('non-nullable _product_plant_mrp cannot be null');
        }
        $this->container['_product_plant_mrp'] = $_product_plant_mrp;

        return $this;
    }

    /**
     * Gets _product_plant_planning
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantPlanningTypeCreate|null
     */
    public function _getProductPlantPlanning()
    {
    return $this->container['_product_plant_planning'];
    }

    /**
     * Sets _product_plant_planning
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantPlanningTypeCreate|null $_product_plant_planning _product_plant_planning
     *
     * @return self
     */
    public function _setProductPlantPlanning($_product_plant_planning)
    {
        if (is_null($_product_plant_planning)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_planning');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_planning', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_planning'] = $_product_plant_planning;

        return $this;
    }

    /**
     * Gets _product_plant_procurement
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate|null
     */
    public function _getProductPlantProcurement()
    {
    return $this->container['_product_plant_procurement'];
    }

    /**
     * Sets _product_plant_procurement
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate|null $_product_plant_procurement _product_plant_procurement
     *
     * @return self
     */
    public function _setProductPlantProcurement($_product_plant_procurement)
    {
        if (is_null($_product_plant_procurement)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_procurement');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_procurement', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_procurement'] = $_product_plant_procurement;

        return $this;
    }

    /**
     * Gets _product_plant_purchase_tax
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantPurchaseTaxTypeCreate[]|null
     */
    public function _getProductPlantPurchaseTax()
    {
    return $this->container['_product_plant_purchase_tax'];
    }

    /**
     * Sets _product_plant_purchase_tax
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantPurchaseTaxTypeCreate[]|null $_product_plant_purchase_tax _product_plant_purchase_tax
     *
     * @return self
     */
    public function _setProductPlantPurchaseTax($_product_plant_purchase_tax)
    {
        if (is_null($_product_plant_purchase_tax)) {
            throw new \InvalidArgumentException('non-nullable _product_plant_purchase_tax cannot be null');
        }
        $this->container['_product_plant_purchase_tax'] = $_product_plant_purchase_tax;

        return $this;
    }

    /**
     * Gets _product_plant_quality_management
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantQualityManagementTypeCreate|null
     */
    public function _getProductPlantQualityManagement()
    {
    return $this->container['_product_plant_quality_management'];
    }

    /**
     * Sets _product_plant_quality_management
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantQualityManagementTypeCreate|null $_product_plant_quality_management _product_plant_quality_management
     *
     * @return self
     */
    public function _setProductPlantQualityManagement($_product_plant_quality_management)
    {
        if (is_null($_product_plant_quality_management)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_quality_management');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_quality_management', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_quality_management'] = $_product_plant_quality_management;

        return $this;
    }

    /**
     * Gets _product_plant_sales
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSalesTypeCreate|null
     */
    public function _getProductPlantSales()
    {
    return $this->container['_product_plant_sales'];
    }

    /**
     * Sets _product_plant_sales
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSalesTypeCreate|null $_product_plant_sales _product_plant_sales
     *
     * @return self
     */
    public function _setProductPlantSales($_product_plant_sales)
    {
        if (is_null($_product_plant_sales)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_sales');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_sales', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_sales'] = $_product_plant_sales;

        return $this;
    }

    /**
     * Gets _product_plant_storage
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeCreate|null
     */
    public function _getProductPlantStorage()
    {
    return $this->container['_product_plant_storage'];
    }

    /**
     * Sets _product_plant_storage
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageTypeCreate|null $_product_plant_storage _product_plant_storage
     *
     * @return self
     */
    public function _setProductPlantStorage($_product_plant_storage)
    {
        if (is_null($_product_plant_storage)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_storage');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_storage', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_storage'] = $_product_plant_storage;

        return $this;
    }

    /**
     * Gets _product_plant_storage_location
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageLocationTypeCreate[]|null
     */
    public function _getProductPlantStorageLocation()
    {
    return $this->container['_product_plant_storage_location'];
    }

    /**
     * Sets _product_plant_storage_location
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantStorageLocationTypeCreate[]|null $_product_plant_storage_location _product_plant_storage_location
     *
     * @return self
     */
    public function _setProductPlantStorageLocation($_product_plant_storage_location)
    {
        if (is_null($_product_plant_storage_location)) {
            throw new \InvalidArgumentException('non-nullable _product_plant_storage_location cannot be null');
        }
        $this->container['_product_plant_storage_location'] = $_product_plant_storage_location;

        return $this;
    }

    /**
     * Gets _product_plant_supply_planning
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningTypeCreate|null
     */
    public function _getProductPlantSupplyPlanning()
    {
    return $this->container['_product_plant_supply_planning'];
    }

    /**
     * Sets _product_plant_supply_planning
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantSupplyPlanningTypeCreate|null $_product_plant_supply_planning _product_plant_supply_planning
     *
     * @return self
     */
    public function _setProductPlantSupplyPlanning($_product_plant_supply_planning)
    {
        if (is_null($_product_plant_supply_planning)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_supply_planning');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_supply_planning', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_supply_planning'] = $_product_plant_supply_planning;

        return $this;
    }

    /**
     * Gets _product_plant_work_scheduling
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantWorkSchedulingTypeCreate|null
     */
    public function _getProductPlantWorkScheduling()
    {
    return $this->container['_product_plant_work_scheduling'];
    }

    /**
     * Sets _product_plant_work_scheduling
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantWorkSchedulingTypeCreate|null $_product_plant_work_scheduling _product_plant_work_scheduling
     *
     * @return self
     */
    public function _setProductPlantWorkScheduling($_product_plant_work_scheduling)
    {
        if (is_null($_product_plant_work_scheduling)) {
            array_push($this->openAPINullablesSetToNull, '_product_plant_work_scheduling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('_product_plant_work_scheduling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['_product_plant_work_scheduling'] = $_product_plant_work_scheduling;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


