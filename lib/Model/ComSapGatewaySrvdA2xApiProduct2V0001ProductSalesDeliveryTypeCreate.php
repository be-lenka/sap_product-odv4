<?php
/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product
 *
 * The service supports following operations: GET, POST, PUT, PATCH, DELETE. You can create, read, update, and delete product master data at the entity level.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\ProductODV4\Model;

use \ArrayAccess;
use \BeLenka\SAP\ProductODV4\ObjectSerializer;

/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'com.sap.gateway.srvd_a2x.api_product_2.v0001.ProductSalesDelivery_Type-create';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'product_sales_org' => 'string',
        'product_distribution_chnl' => 'string',
        'minimum_order_quantity' => '\BeLenka\SAP\ProductODV4\Model\MinimumOrderQty',
        'supplying_plant' => 'string',
        'price_specification_product_group' => 'string',
        'account_detn_product_group' => 'string',
        'delivery_note_proc_min_deliv_qty' => '\BeLenka\SAP\ProductODV4\Model\MinimumDeliveryQty',
        'item_category_group' => 'string',
        'delivery_quantity_unit' => 'string',
        'delivery_quantity_iso_unit' => 'string',
        'delivery_quantity' => '\BeLenka\SAP\ProductODV4\Model\DeliveryUnit',
        'product_sales_status' => 'string',
        'product_sales_status_validity_date' => '\DateTime',
        'sales_measure_unit' => 'string',
        'sales_measure_iso_unit' => 'string',
        'is_marked_for_deletion' => 'bool',
        'first_sales_spec_product_group' => 'string',
        'second_sales_spec_product_group' => 'string',
        'third_sales_spec_product_group' => 'string',
        'fourth_sales_spec_product_group' => 'string',
        'fifth_sales_spec_product_group' => 'string',
        'logistics_statistics_group' => 'string',
        'volume_rebate_group' => 'string',
        'cash_discount_is_deductible' => 'bool',
        'rounding_profile' => 'string',
        'variable_sales_unit_is_not_allowed' => 'bool',
        'product_commission_group' => 'string',
        'pricing_reference_product' => 'string',
        'product_has_attribute_id01' => 'bool',
        'product_has_attribute_id02' => 'bool',
        'product_has_attribute_id03' => 'bool',
        'product_has_attribute_id04' => 'bool',
        'product_has_attribute_id05' => 'bool',
        'product_has_attribute_id06' => 'bool',
        'product_has_attribute_id07' => 'bool',
        'product_has_attribute_id08' => 'bool',
        'product_has_attribute_id09' => 'bool',
        'product_has_attribute_id10' => 'bool',
        'prod_is_entlmnt_rlvt' => 'bool',
        'base_unit' => 'string',
        'base_iso_unit' => 'string',
        'sap__messages' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]',
        '_prod_sales_delivery_sales_tax' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProdSalesDeliverySalesTaxTypeCreate[]',
        '_product' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'product_sales_org' => null,
        'product_distribution_chnl' => null,
        'minimum_order_quantity' => null,
        'supplying_plant' => null,
        'price_specification_product_group' => null,
        'account_detn_product_group' => null,
        'delivery_note_proc_min_deliv_qty' => null,
        'item_category_group' => null,
        'delivery_quantity_unit' => null,
        'delivery_quantity_iso_unit' => null,
        'delivery_quantity' => null,
        'product_sales_status' => null,
        'product_sales_status_validity_date' => 'date',
        'sales_measure_unit' => null,
        'sales_measure_iso_unit' => null,
        'is_marked_for_deletion' => null,
        'first_sales_spec_product_group' => null,
        'second_sales_spec_product_group' => null,
        'third_sales_spec_product_group' => null,
        'fourth_sales_spec_product_group' => null,
        'fifth_sales_spec_product_group' => null,
        'logistics_statistics_group' => null,
        'volume_rebate_group' => null,
        'cash_discount_is_deductible' => null,
        'rounding_profile' => null,
        'variable_sales_unit_is_not_allowed' => null,
        'product_commission_group' => null,
        'pricing_reference_product' => null,
        'product_has_attribute_id01' => null,
        'product_has_attribute_id02' => null,
        'product_has_attribute_id03' => null,
        'product_has_attribute_id04' => null,
        'product_has_attribute_id05' => null,
        'product_has_attribute_id06' => null,
        'product_has_attribute_id07' => null,
        'product_has_attribute_id08' => null,
        'product_has_attribute_id09' => null,
        'product_has_attribute_id10' => null,
        'prod_is_entlmnt_rlvt' => null,
        'base_unit' => null,
        'base_iso_unit' => null,
        'sap__messages' => null,
        '_prod_sales_delivery_sales_tax' => null,
        '_product' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'product_sales_org' => false,
		'product_distribution_chnl' => false,
		'minimum_order_quantity' => false,
		'supplying_plant' => false,
		'price_specification_product_group' => false,
		'account_detn_product_group' => false,
		'delivery_note_proc_min_deliv_qty' => false,
		'item_category_group' => false,
		'delivery_quantity_unit' => false,
		'delivery_quantity_iso_unit' => false,
		'delivery_quantity' => false,
		'product_sales_status' => false,
		'product_sales_status_validity_date' => true,
		'sales_measure_unit' => false,
		'sales_measure_iso_unit' => false,
		'is_marked_for_deletion' => false,
		'first_sales_spec_product_group' => false,
		'second_sales_spec_product_group' => false,
		'third_sales_spec_product_group' => false,
		'fourth_sales_spec_product_group' => false,
		'fifth_sales_spec_product_group' => false,
		'logistics_statistics_group' => false,
		'volume_rebate_group' => false,
		'cash_discount_is_deductible' => false,
		'rounding_profile' => false,
		'variable_sales_unit_is_not_allowed' => false,
		'product_commission_group' => false,
		'pricing_reference_product' => false,
		'product_has_attribute_id01' => false,
		'product_has_attribute_id02' => false,
		'product_has_attribute_id03' => false,
		'product_has_attribute_id04' => false,
		'product_has_attribute_id05' => false,
		'product_has_attribute_id06' => false,
		'product_has_attribute_id07' => false,
		'product_has_attribute_id08' => false,
		'product_has_attribute_id09' => false,
		'product_has_attribute_id10' => false,
		'prod_is_entlmnt_rlvt' => false,
		'base_unit' => false,
		'base_iso_unit' => false,
		'sap__messages' => false,
		'_prod_sales_delivery_sales_tax' => false,
		'_product' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'product_sales_org' => 'ProductSalesOrg',
        'product_distribution_chnl' => 'ProductDistributionChnl',
        'minimum_order_quantity' => 'MinimumOrderQuantity',
        'supplying_plant' => 'SupplyingPlant',
        'price_specification_product_group' => 'PriceSpecificationProductGroup',
        'account_detn_product_group' => 'AccountDetnProductGroup',
        'delivery_note_proc_min_deliv_qty' => 'DeliveryNoteProcMinDelivQty',
        'item_category_group' => 'ItemCategoryGroup',
        'delivery_quantity_unit' => 'DeliveryQuantityUnit',
        'delivery_quantity_iso_unit' => 'DeliveryQuantityISOUnit',
        'delivery_quantity' => 'DeliveryQuantity',
        'product_sales_status' => 'ProductSalesStatus',
        'product_sales_status_validity_date' => 'ProductSalesStatusValidityDate',
        'sales_measure_unit' => 'SalesMeasureUnit',
        'sales_measure_iso_unit' => 'SalesMeasureISOUnit',
        'is_marked_for_deletion' => 'IsMarkedForDeletion',
        'first_sales_spec_product_group' => 'FirstSalesSpecProductGroup',
        'second_sales_spec_product_group' => 'SecondSalesSpecProductGroup',
        'third_sales_spec_product_group' => 'ThirdSalesSpecProductGroup',
        'fourth_sales_spec_product_group' => 'FourthSalesSpecProductGroup',
        'fifth_sales_spec_product_group' => 'FifthSalesSpecProductGroup',
        'logistics_statistics_group' => 'LogisticsStatisticsGroup',
        'volume_rebate_group' => 'VolumeRebateGroup',
        'cash_discount_is_deductible' => 'CashDiscountIsDeductible',
        'rounding_profile' => 'RoundingProfile',
        'variable_sales_unit_is_not_allowed' => 'VariableSalesUnitIsNotAllowed',
        'product_commission_group' => 'ProductCommissionGroup',
        'pricing_reference_product' => 'PricingReferenceProduct',
        'product_has_attribute_id01' => 'ProductHasAttributeID01',
        'product_has_attribute_id02' => 'ProductHasAttributeID02',
        'product_has_attribute_id03' => 'ProductHasAttributeID03',
        'product_has_attribute_id04' => 'ProductHasAttributeID04',
        'product_has_attribute_id05' => 'ProductHasAttributeID05',
        'product_has_attribute_id06' => 'ProductHasAttributeID06',
        'product_has_attribute_id07' => 'ProductHasAttributeID07',
        'product_has_attribute_id08' => 'ProductHasAttributeID08',
        'product_has_attribute_id09' => 'ProductHasAttributeID09',
        'product_has_attribute_id10' => 'ProductHasAttributeID10',
        'prod_is_entlmnt_rlvt' => 'ProdIsEntlmntRlvt',
        'base_unit' => 'BaseUnit',
        'base_iso_unit' => 'BaseISOUnit',
        'sap__messages' => 'SAP__Messages',
        '_prod_sales_delivery_sales_tax' => '_ProdSalesDeliverySalesTax',
        '_product' => '_Product'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'product_sales_org' => 'setProductSalesOrg',
        'product_distribution_chnl' => 'setProductDistributionChnl',
        'minimum_order_quantity' => 'setMinimumOrderQuantity',
        'supplying_plant' => 'setSupplyingPlant',
        'price_specification_product_group' => 'setPriceSpecificationProductGroup',
        'account_detn_product_group' => 'setAccountDetnProductGroup',
        'delivery_note_proc_min_deliv_qty' => 'setDeliveryNoteProcMinDelivQty',
        'item_category_group' => 'setItemCategoryGroup',
        'delivery_quantity_unit' => 'setDeliveryQuantityUnit',
        'delivery_quantity_iso_unit' => 'setDeliveryQuantityIsoUnit',
        'delivery_quantity' => 'setDeliveryQuantity',
        'product_sales_status' => 'setProductSalesStatus',
        'product_sales_status_validity_date' => 'setProductSalesStatusValidityDate',
        'sales_measure_unit' => 'setSalesMeasureUnit',
        'sales_measure_iso_unit' => 'setSalesMeasureIsoUnit',
        'is_marked_for_deletion' => 'setIsMarkedForDeletion',
        'first_sales_spec_product_group' => 'setFirstSalesSpecProductGroup',
        'second_sales_spec_product_group' => 'setSecondSalesSpecProductGroup',
        'third_sales_spec_product_group' => 'setThirdSalesSpecProductGroup',
        'fourth_sales_spec_product_group' => 'setFourthSalesSpecProductGroup',
        'fifth_sales_spec_product_group' => 'setFifthSalesSpecProductGroup',
        'logistics_statistics_group' => 'setLogisticsStatisticsGroup',
        'volume_rebate_group' => 'setVolumeRebateGroup',
        'cash_discount_is_deductible' => 'setCashDiscountIsDeductible',
        'rounding_profile' => 'setRoundingProfile',
        'variable_sales_unit_is_not_allowed' => 'setVariableSalesUnitIsNotAllowed',
        'product_commission_group' => 'setProductCommissionGroup',
        'pricing_reference_product' => 'setPricingReferenceProduct',
        'product_has_attribute_id01' => 'setProductHasAttributeId01',
        'product_has_attribute_id02' => 'setProductHasAttributeId02',
        'product_has_attribute_id03' => 'setProductHasAttributeId03',
        'product_has_attribute_id04' => 'setProductHasAttributeId04',
        'product_has_attribute_id05' => 'setProductHasAttributeId05',
        'product_has_attribute_id06' => 'setProductHasAttributeId06',
        'product_has_attribute_id07' => 'setProductHasAttributeId07',
        'product_has_attribute_id08' => 'setProductHasAttributeId08',
        'product_has_attribute_id09' => 'setProductHasAttributeId09',
        'product_has_attribute_id10' => 'setProductHasAttributeId10',
        'prod_is_entlmnt_rlvt' => 'setProdIsEntlmntRlvt',
        'base_unit' => 'setBaseUnit',
        'base_iso_unit' => 'setBaseIsoUnit',
        'sap__messages' => 'setSapMessages',
        '_prod_sales_delivery_sales_tax' => '_setProdSalesDeliverySalesTax',
        '_product' => '_setProduct'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'product_sales_org' => 'getProductSalesOrg',
        'product_distribution_chnl' => 'getProductDistributionChnl',
        'minimum_order_quantity' => 'getMinimumOrderQuantity',
        'supplying_plant' => 'getSupplyingPlant',
        'price_specification_product_group' => 'getPriceSpecificationProductGroup',
        'account_detn_product_group' => 'getAccountDetnProductGroup',
        'delivery_note_proc_min_deliv_qty' => 'getDeliveryNoteProcMinDelivQty',
        'item_category_group' => 'getItemCategoryGroup',
        'delivery_quantity_unit' => 'getDeliveryQuantityUnit',
        'delivery_quantity_iso_unit' => 'getDeliveryQuantityIsoUnit',
        'delivery_quantity' => 'getDeliveryQuantity',
        'product_sales_status' => 'getProductSalesStatus',
        'product_sales_status_validity_date' => 'getProductSalesStatusValidityDate',
        'sales_measure_unit' => 'getSalesMeasureUnit',
        'sales_measure_iso_unit' => 'getSalesMeasureIsoUnit',
        'is_marked_for_deletion' => 'getIsMarkedForDeletion',
        'first_sales_spec_product_group' => 'getFirstSalesSpecProductGroup',
        'second_sales_spec_product_group' => 'getSecondSalesSpecProductGroup',
        'third_sales_spec_product_group' => 'getThirdSalesSpecProductGroup',
        'fourth_sales_spec_product_group' => 'getFourthSalesSpecProductGroup',
        'fifth_sales_spec_product_group' => 'getFifthSalesSpecProductGroup',
        'logistics_statistics_group' => 'getLogisticsStatisticsGroup',
        'volume_rebate_group' => 'getVolumeRebateGroup',
        'cash_discount_is_deductible' => 'getCashDiscountIsDeductible',
        'rounding_profile' => 'getRoundingProfile',
        'variable_sales_unit_is_not_allowed' => 'getVariableSalesUnitIsNotAllowed',
        'product_commission_group' => 'getProductCommissionGroup',
        'pricing_reference_product' => 'getPricingReferenceProduct',
        'product_has_attribute_id01' => 'getProductHasAttributeId01',
        'product_has_attribute_id02' => 'getProductHasAttributeId02',
        'product_has_attribute_id03' => 'getProductHasAttributeId03',
        'product_has_attribute_id04' => 'getProductHasAttributeId04',
        'product_has_attribute_id05' => 'getProductHasAttributeId05',
        'product_has_attribute_id06' => 'getProductHasAttributeId06',
        'product_has_attribute_id07' => 'getProductHasAttributeId07',
        'product_has_attribute_id08' => 'getProductHasAttributeId08',
        'product_has_attribute_id09' => 'getProductHasAttributeId09',
        'product_has_attribute_id10' => 'getProductHasAttributeId10',
        'prod_is_entlmnt_rlvt' => 'getProdIsEntlmntRlvt',
        'base_unit' => 'getBaseUnit',
        'base_iso_unit' => 'getBaseIsoUnit',
        'sap__messages' => 'getSapMessages',
        '_prod_sales_delivery_sales_tax' => '_getProdSalesDeliverySalesTax',
        '_product' => '_getProduct'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('product_sales_org', $data ?? [], null);
        $this->setIfExists('product_distribution_chnl', $data ?? [], null);
        $this->setIfExists('minimum_order_quantity', $data ?? [], null);
        $this->setIfExists('supplying_plant', $data ?? [], null);
        $this->setIfExists('price_specification_product_group', $data ?? [], null);
        $this->setIfExists('account_detn_product_group', $data ?? [], null);
        $this->setIfExists('delivery_note_proc_min_deliv_qty', $data ?? [], null);
        $this->setIfExists('item_category_group', $data ?? [], null);
        $this->setIfExists('delivery_quantity_unit', $data ?? [], null);
        $this->setIfExists('delivery_quantity_iso_unit', $data ?? [], null);
        $this->setIfExists('delivery_quantity', $data ?? [], null);
        $this->setIfExists('product_sales_status', $data ?? [], null);
        $this->setIfExists('product_sales_status_validity_date', $data ?? [], null);
        $this->setIfExists('sales_measure_unit', $data ?? [], null);
        $this->setIfExists('sales_measure_iso_unit', $data ?? [], null);
        $this->setIfExists('is_marked_for_deletion', $data ?? [], null);
        $this->setIfExists('first_sales_spec_product_group', $data ?? [], null);
        $this->setIfExists('second_sales_spec_product_group', $data ?? [], null);
        $this->setIfExists('third_sales_spec_product_group', $data ?? [], null);
        $this->setIfExists('fourth_sales_spec_product_group', $data ?? [], null);
        $this->setIfExists('fifth_sales_spec_product_group', $data ?? [], null);
        $this->setIfExists('logistics_statistics_group', $data ?? [], null);
        $this->setIfExists('volume_rebate_group', $data ?? [], null);
        $this->setIfExists('cash_discount_is_deductible', $data ?? [], null);
        $this->setIfExists('rounding_profile', $data ?? [], null);
        $this->setIfExists('variable_sales_unit_is_not_allowed', $data ?? [], null);
        $this->setIfExists('product_commission_group', $data ?? [], null);
        $this->setIfExists('pricing_reference_product', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id01', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id02', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id03', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id04', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id05', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id06', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id07', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id08', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id09', $data ?? [], null);
        $this->setIfExists('product_has_attribute_id10', $data ?? [], null);
        $this->setIfExists('prod_is_entlmnt_rlvt', $data ?? [], null);
        $this->setIfExists('base_unit', $data ?? [], null);
        $this->setIfExists('base_iso_unit', $data ?? [], null);
        $this->setIfExists('sap__messages', $data ?? [], null);
        $this->setIfExists('_prod_sales_delivery_sales_tax', $data ?? [], null);
        $this->setIfExists('_product', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['product_sales_org'] === null) {
            $invalidProperties[] = "'product_sales_org' can't be null";
        }
        if ((mb_strlen($this->container['product_sales_org']) > 4)) {
            $invalidProperties[] = "invalid value for 'product_sales_org', the character length must be smaller than or equal to 4.";
        }

        if ($this->container['product_distribution_chnl'] === null) {
            $invalidProperties[] = "'product_distribution_chnl' can't be null";
        }
        if ((mb_strlen($this->container['product_distribution_chnl']) > 2)) {
            $invalidProperties[] = "invalid value for 'product_distribution_chnl', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['supplying_plant']) && (mb_strlen($this->container['supplying_plant']) > 4)) {
            $invalidProperties[] = "invalid value for 'supplying_plant', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['price_specification_product_group']) && (mb_strlen($this->container['price_specification_product_group']) > 2)) {
            $invalidProperties[] = "invalid value for 'price_specification_product_group', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['account_detn_product_group']) && (mb_strlen($this->container['account_detn_product_group']) > 2)) {
            $invalidProperties[] = "invalid value for 'account_detn_product_group', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['item_category_group']) && (mb_strlen($this->container['item_category_group']) > 4)) {
            $invalidProperties[] = "invalid value for 'item_category_group', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['delivery_quantity_unit']) && (mb_strlen($this->container['delivery_quantity_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'delivery_quantity_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['delivery_quantity_iso_unit']) && (mb_strlen($this->container['delivery_quantity_iso_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'delivery_quantity_iso_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['product_sales_status']) && (mb_strlen($this->container['product_sales_status']) > 2)) {
            $invalidProperties[] = "invalid value for 'product_sales_status', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['sales_measure_unit']) && (mb_strlen($this->container['sales_measure_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'sales_measure_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['sales_measure_iso_unit']) && (mb_strlen($this->container['sales_measure_iso_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'sales_measure_iso_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['first_sales_spec_product_group']) && (mb_strlen($this->container['first_sales_spec_product_group']) > 3)) {
            $invalidProperties[] = "invalid value for 'first_sales_spec_product_group', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['second_sales_spec_product_group']) && (mb_strlen($this->container['second_sales_spec_product_group']) > 3)) {
            $invalidProperties[] = "invalid value for 'second_sales_spec_product_group', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['third_sales_spec_product_group']) && (mb_strlen($this->container['third_sales_spec_product_group']) > 3)) {
            $invalidProperties[] = "invalid value for 'third_sales_spec_product_group', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['fourth_sales_spec_product_group']) && (mb_strlen($this->container['fourth_sales_spec_product_group']) > 3)) {
            $invalidProperties[] = "invalid value for 'fourth_sales_spec_product_group', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['fifth_sales_spec_product_group']) && (mb_strlen($this->container['fifth_sales_spec_product_group']) > 3)) {
            $invalidProperties[] = "invalid value for 'fifth_sales_spec_product_group', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['logistics_statistics_group']) && (mb_strlen($this->container['logistics_statistics_group']) > 1)) {
            $invalidProperties[] = "invalid value for 'logistics_statistics_group', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['volume_rebate_group']) && (mb_strlen($this->container['volume_rebate_group']) > 2)) {
            $invalidProperties[] = "invalid value for 'volume_rebate_group', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['rounding_profile']) && (mb_strlen($this->container['rounding_profile']) > 4)) {
            $invalidProperties[] = "invalid value for 'rounding_profile', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['product_commission_group']) && (mb_strlen($this->container['product_commission_group']) > 2)) {
            $invalidProperties[] = "invalid value for 'product_commission_group', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['pricing_reference_product']) && (mb_strlen($this->container['pricing_reference_product']) > 18)) {
            $invalidProperties[] = "invalid value for 'pricing_reference_product', the character length must be smaller than or equal to 18.";
        }

        if (!is_null($this->container['base_unit']) && (mb_strlen($this->container['base_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'base_unit', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['base_iso_unit']) && (mb_strlen($this->container['base_iso_unit']) > 3)) {
            $invalidProperties[] = "invalid value for 'base_iso_unit', the character length must be smaller than or equal to 3.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets product_sales_org
     *
     * @return string
     */
    public function getProductSalesOrg()
    {
        return $this->container['product_sales_org'];
    }

    /**
     * Sets product_sales_org
     *
     * @param string $product_sales_org product_sales_org
     *
     * @return self
     */
    public function setProductSalesOrg($product_sales_org)
    {
        if (is_null($product_sales_org)) {
            throw new \InvalidArgumentException('non-nullable product_sales_org cannot be null');
        }
        if ((mb_strlen($product_sales_org) > 4)) {
            throw new \InvalidArgumentException('invalid length for $product_sales_org when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['product_sales_org'] = $product_sales_org;

        return $this;
    }

    /**
     * Gets product_distribution_chnl
     *
     * @return string
     */
    public function getProductDistributionChnl()
    {
        return $this->container['product_distribution_chnl'];
    }

    /**
     * Sets product_distribution_chnl
     *
     * @param string $product_distribution_chnl product_distribution_chnl
     *
     * @return self
     */
    public function setProductDistributionChnl($product_distribution_chnl)
    {
        if (is_null($product_distribution_chnl)) {
            throw new \InvalidArgumentException('non-nullable product_distribution_chnl cannot be null');
        }
        if ((mb_strlen($product_distribution_chnl) > 2)) {
            throw new \InvalidArgumentException('invalid length for $product_distribution_chnl when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['product_distribution_chnl'] = $product_distribution_chnl;

        return $this;
    }

    /**
     * Gets minimum_order_quantity
     *
     * @return \BeLenka\SAP\ProductODV4\Model\MinimumOrderQty|null
     */
    public function getMinimumOrderQuantity()
    {
        return $this->container['minimum_order_quantity'];
    }

    /**
     * Sets minimum_order_quantity
     *
     * @param \BeLenka\SAP\ProductODV4\Model\MinimumOrderQty|null $minimum_order_quantity minimum_order_quantity
     *
     * @return self
     */
    public function setMinimumOrderQuantity($minimum_order_quantity)
    {
        if (is_null($minimum_order_quantity)) {
            throw new \InvalidArgumentException('non-nullable minimum_order_quantity cannot be null');
        }
        $this->container['minimum_order_quantity'] = $minimum_order_quantity;

        return $this;
    }

    /**
     * Gets supplying_plant
     *
     * @return string|null
     */
    public function getSupplyingPlant()
    {
        return $this->container['supplying_plant'];
    }

    /**
     * Sets supplying_plant
     *
     * @param string|null $supplying_plant supplying_plant
     *
     * @return self
     */
    public function setSupplyingPlant($supplying_plant)
    {
        if (is_null($supplying_plant)) {
            throw new \InvalidArgumentException('non-nullable supplying_plant cannot be null');
        }
        if ((mb_strlen($supplying_plant) > 4)) {
            throw new \InvalidArgumentException('invalid length for $supplying_plant when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['supplying_plant'] = $supplying_plant;

        return $this;
    }

    /**
     * Gets price_specification_product_group
     *
     * @return string|null
     */
    public function getPriceSpecificationProductGroup()
    {
        return $this->container['price_specification_product_group'];
    }

    /**
     * Sets price_specification_product_group
     *
     * @param string|null $price_specification_product_group Product Pricing Group
     *
     * @return self
     */
    public function setPriceSpecificationProductGroup($price_specification_product_group)
    {
        if (is_null($price_specification_product_group)) {
            throw new \InvalidArgumentException('non-nullable price_specification_product_group cannot be null');
        }
        if ((mb_strlen($price_specification_product_group) > 2)) {
            throw new \InvalidArgumentException('invalid length for $price_specification_product_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['price_specification_product_group'] = $price_specification_product_group;

        return $this;
    }

    /**
     * Gets account_detn_product_group
     *
     * @return string|null
     */
    public function getAccountDetnProductGroup()
    {
        return $this->container['account_detn_product_group'];
    }

    /**
     * Sets account_detn_product_group
     *
     * @param string|null $account_detn_product_group Account Assignment Group for Material
     *
     * @return self
     */
    public function setAccountDetnProductGroup($account_detn_product_group)
    {
        if (is_null($account_detn_product_group)) {
            throw new \InvalidArgumentException('non-nullable account_detn_product_group cannot be null');
        }
        if ((mb_strlen($account_detn_product_group) > 2)) {
            throw new \InvalidArgumentException('invalid length for $account_detn_product_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['account_detn_product_group'] = $account_detn_product_group;

        return $this;
    }

    /**
     * Gets delivery_note_proc_min_deliv_qty
     *
     * @return \BeLenka\SAP\ProductODV4\Model\MinimumDeliveryQty|null
     */
    public function getDeliveryNoteProcMinDelivQty()
    {
        return $this->container['delivery_note_proc_min_deliv_qty'];
    }

    /**
     * Sets delivery_note_proc_min_deliv_qty
     *
     * @param \BeLenka\SAP\ProductODV4\Model\MinimumDeliveryQty|null $delivery_note_proc_min_deliv_qty delivery_note_proc_min_deliv_qty
     *
     * @return self
     */
    public function setDeliveryNoteProcMinDelivQty($delivery_note_proc_min_deliv_qty)
    {
        if (is_null($delivery_note_proc_min_deliv_qty)) {
            throw new \InvalidArgumentException('non-nullable delivery_note_proc_min_deliv_qty cannot be null');
        }
        $this->container['delivery_note_proc_min_deliv_qty'] = $delivery_note_proc_min_deliv_qty;

        return $this;
    }

    /**
     * Gets item_category_group
     *
     * @return string|null
     */
    public function getItemCategoryGroup()
    {
        return $this->container['item_category_group'];
    }

    /**
     * Sets item_category_group
     *
     * @param string|null $item_category_group Item Category Group from Material Master
     *
     * @return self
     */
    public function setItemCategoryGroup($item_category_group)
    {
        if (is_null($item_category_group)) {
            throw new \InvalidArgumentException('non-nullable item_category_group cannot be null');
        }
        if ((mb_strlen($item_category_group) > 4)) {
            throw new \InvalidArgumentException('invalid length for $item_category_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['item_category_group'] = $item_category_group;

        return $this;
    }

    /**
     * Gets delivery_quantity_unit
     *
     * @return string|null
     */
    public function getDeliveryQuantityUnit()
    {
        return $this->container['delivery_quantity_unit'];
    }

    /**
     * Sets delivery_quantity_unit
     *
     * @param string|null $delivery_quantity_unit Unit Of Measure Of Delivery Unit
     *
     * @return self
     */
    public function setDeliveryQuantityUnit($delivery_quantity_unit)
    {
        if (is_null($delivery_quantity_unit)) {
            throw new \InvalidArgumentException('non-nullable delivery_quantity_unit cannot be null');
        }
        if ((mb_strlen($delivery_quantity_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $delivery_quantity_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['delivery_quantity_unit'] = $delivery_quantity_unit;

        return $this;
    }

    /**
     * Gets delivery_quantity_iso_unit
     *
     * @return string|null
     */
    public function getDeliveryQuantityIsoUnit()
    {
        return $this->container['delivery_quantity_iso_unit'];
    }

    /**
     * Sets delivery_quantity_iso_unit
     *
     * @param string|null $delivery_quantity_iso_unit ISO Code for Unit of Measurement
     *
     * @return self
     */
    public function setDeliveryQuantityIsoUnit($delivery_quantity_iso_unit)
    {
        if (is_null($delivery_quantity_iso_unit)) {
            throw new \InvalidArgumentException('non-nullable delivery_quantity_iso_unit cannot be null');
        }
        if ((mb_strlen($delivery_quantity_iso_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $delivery_quantity_iso_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['delivery_quantity_iso_unit'] = $delivery_quantity_iso_unit;

        return $this;
    }

    /**
     * Gets delivery_quantity
     *
     * @return \BeLenka\SAP\ProductODV4\Model\DeliveryUnit|null
     */
    public function getDeliveryQuantity()
    {
        return $this->container['delivery_quantity'];
    }

    /**
     * Sets delivery_quantity
     *
     * @param \BeLenka\SAP\ProductODV4\Model\DeliveryUnit|null $delivery_quantity delivery_quantity
     *
     * @return self
     */
    public function setDeliveryQuantity($delivery_quantity)
    {
        if (is_null($delivery_quantity)) {
            throw new \InvalidArgumentException('non-nullable delivery_quantity cannot be null');
        }
        $this->container['delivery_quantity'] = $delivery_quantity;

        return $this;
    }

    /**
     * Gets product_sales_status
     *
     * @return string|null
     */
    public function getProductSalesStatus()
    {
        return $this->container['product_sales_status'];
    }

    /**
     * Sets product_sales_status
     *
     * @param string|null $product_sales_status Distribution-chain-specific material status
     *
     * @return self
     */
    public function setProductSalesStatus($product_sales_status)
    {
        if (is_null($product_sales_status)) {
            throw new \InvalidArgumentException('non-nullable product_sales_status cannot be null');
        }
        if ((mb_strlen($product_sales_status) > 2)) {
            throw new \InvalidArgumentException('invalid length for $product_sales_status when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['product_sales_status'] = $product_sales_status;

        return $this;
    }

    /**
     * Gets product_sales_status_validity_date
     *
     * @return \DateTime|null
     */
    public function getProductSalesStatusValidityDate()
    {
        return $this->container['product_sales_status_validity_date'];
    }

    /**
     * Sets product_sales_status_validity_date
     *
     * @param \DateTime|null $product_sales_status_validity_date Date from which distr.-chain-spec. material status is valid
     *
     * @return self
     */
    public function setProductSalesStatusValidityDate($product_sales_status_validity_date)
    {
        if (is_null($product_sales_status_validity_date)) {
            array_push($this->openAPINullablesSetToNull, 'product_sales_status_validity_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('product_sales_status_validity_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['product_sales_status_validity_date'] = $product_sales_status_validity_date;

        return $this;
    }

    /**
     * Gets sales_measure_unit
     *
     * @return string|null
     */
    public function getSalesMeasureUnit()
    {
        return $this->container['sales_measure_unit'];
    }

    /**
     * Sets sales_measure_unit
     *
     * @param string|null $sales_measure_unit Base Unit of Measure - No Conversion Routine
     *
     * @return self
     */
    public function setSalesMeasureUnit($sales_measure_unit)
    {
        if (is_null($sales_measure_unit)) {
            throw new \InvalidArgumentException('non-nullable sales_measure_unit cannot be null');
        }
        if ((mb_strlen($sales_measure_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $sales_measure_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['sales_measure_unit'] = $sales_measure_unit;

        return $this;
    }

    /**
     * Gets sales_measure_iso_unit
     *
     * @return string|null
     */
    public function getSalesMeasureIsoUnit()
    {
        return $this->container['sales_measure_iso_unit'];
    }

    /**
     * Sets sales_measure_iso_unit
     *
     * @param string|null $sales_measure_iso_unit ISO Code for Unit of Measurement
     *
     * @return self
     */
    public function setSalesMeasureIsoUnit($sales_measure_iso_unit)
    {
        if (is_null($sales_measure_iso_unit)) {
            throw new \InvalidArgumentException('non-nullable sales_measure_iso_unit cannot be null');
        }
        if ((mb_strlen($sales_measure_iso_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $sales_measure_iso_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['sales_measure_iso_unit'] = $sales_measure_iso_unit;

        return $this;
    }

    /**
     * Gets is_marked_for_deletion
     *
     * @return bool|null
     */
    public function getIsMarkedForDeletion()
    {
        return $this->container['is_marked_for_deletion'];
    }

    /**
     * Sets is_marked_for_deletion
     *
     * @param bool|null $is_marked_for_deletion Ind.: Flag material for deletion at distribution chain level
     *
     * @return self
     */
    public function setIsMarkedForDeletion($is_marked_for_deletion)
    {
        if (is_null($is_marked_for_deletion)) {
            throw new \InvalidArgumentException('non-nullable is_marked_for_deletion cannot be null');
        }
        $this->container['is_marked_for_deletion'] = $is_marked_for_deletion;

        return $this;
    }

    /**
     * Gets first_sales_spec_product_group
     *
     * @return string|null
     */
    public function getFirstSalesSpecProductGroup()
    {
        return $this->container['first_sales_spec_product_group'];
    }

    /**
     * Sets first_sales_spec_product_group
     *
     * @param string|null $first_sales_spec_product_group first_sales_spec_product_group
     *
     * @return self
     */
    public function setFirstSalesSpecProductGroup($first_sales_spec_product_group)
    {
        if (is_null($first_sales_spec_product_group)) {
            throw new \InvalidArgumentException('non-nullable first_sales_spec_product_group cannot be null');
        }
        if ((mb_strlen($first_sales_spec_product_group) > 3)) {
            throw new \InvalidArgumentException('invalid length for $first_sales_spec_product_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['first_sales_spec_product_group'] = $first_sales_spec_product_group;

        return $this;
    }

    /**
     * Gets second_sales_spec_product_group
     *
     * @return string|null
     */
    public function getSecondSalesSpecProductGroup()
    {
        return $this->container['second_sales_spec_product_group'];
    }

    /**
     * Sets second_sales_spec_product_group
     *
     * @param string|null $second_sales_spec_product_group second_sales_spec_product_group
     *
     * @return self
     */
    public function setSecondSalesSpecProductGroup($second_sales_spec_product_group)
    {
        if (is_null($second_sales_spec_product_group)) {
            throw new \InvalidArgumentException('non-nullable second_sales_spec_product_group cannot be null');
        }
        if ((mb_strlen($second_sales_spec_product_group) > 3)) {
            throw new \InvalidArgumentException('invalid length for $second_sales_spec_product_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['second_sales_spec_product_group'] = $second_sales_spec_product_group;

        return $this;
    }

    /**
     * Gets third_sales_spec_product_group
     *
     * @return string|null
     */
    public function getThirdSalesSpecProductGroup()
    {
        return $this->container['third_sales_spec_product_group'];
    }

    /**
     * Sets third_sales_spec_product_group
     *
     * @param string|null $third_sales_spec_product_group third_sales_spec_product_group
     *
     * @return self
     */
    public function setThirdSalesSpecProductGroup($third_sales_spec_product_group)
    {
        if (is_null($third_sales_spec_product_group)) {
            throw new \InvalidArgumentException('non-nullable third_sales_spec_product_group cannot be null');
        }
        if ((mb_strlen($third_sales_spec_product_group) > 3)) {
            throw new \InvalidArgumentException('invalid length for $third_sales_spec_product_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['third_sales_spec_product_group'] = $third_sales_spec_product_group;

        return $this;
    }

    /**
     * Gets fourth_sales_spec_product_group
     *
     * @return string|null
     */
    public function getFourthSalesSpecProductGroup()
    {
        return $this->container['fourth_sales_spec_product_group'];
    }

    /**
     * Sets fourth_sales_spec_product_group
     *
     * @param string|null $fourth_sales_spec_product_group fourth_sales_spec_product_group
     *
     * @return self
     */
    public function setFourthSalesSpecProductGroup($fourth_sales_spec_product_group)
    {
        if (is_null($fourth_sales_spec_product_group)) {
            throw new \InvalidArgumentException('non-nullable fourth_sales_spec_product_group cannot be null');
        }
        if ((mb_strlen($fourth_sales_spec_product_group) > 3)) {
            throw new \InvalidArgumentException('invalid length for $fourth_sales_spec_product_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['fourth_sales_spec_product_group'] = $fourth_sales_spec_product_group;

        return $this;
    }

    /**
     * Gets fifth_sales_spec_product_group
     *
     * @return string|null
     */
    public function getFifthSalesSpecProductGroup()
    {
        return $this->container['fifth_sales_spec_product_group'];
    }

    /**
     * Sets fifth_sales_spec_product_group
     *
     * @param string|null $fifth_sales_spec_product_group fifth_sales_spec_product_group
     *
     * @return self
     */
    public function setFifthSalesSpecProductGroup($fifth_sales_spec_product_group)
    {
        if (is_null($fifth_sales_spec_product_group)) {
            throw new \InvalidArgumentException('non-nullable fifth_sales_spec_product_group cannot be null');
        }
        if ((mb_strlen($fifth_sales_spec_product_group) > 3)) {
            throw new \InvalidArgumentException('invalid length for $fifth_sales_spec_product_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['fifth_sales_spec_product_group'] = $fifth_sales_spec_product_group;

        return $this;
    }

    /**
     * Gets logistics_statistics_group
     *
     * @return string|null
     */
    public function getLogisticsStatisticsGroup()
    {
        return $this->container['logistics_statistics_group'];
    }

    /**
     * Sets logistics_statistics_group
     *
     * @param string|null $logistics_statistics_group Material statistics group
     *
     * @return self
     */
    public function setLogisticsStatisticsGroup($logistics_statistics_group)
    {
        if (is_null($logistics_statistics_group)) {
            throw new \InvalidArgumentException('non-nullable logistics_statistics_group cannot be null');
        }
        if ((mb_strlen($logistics_statistics_group) > 1)) {
            throw new \InvalidArgumentException('invalid length for $logistics_statistics_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 1.');
        }

        $this->container['logistics_statistics_group'] = $logistics_statistics_group;

        return $this;
    }

    /**
     * Gets volume_rebate_group
     *
     * @return string|null
     */
    public function getVolumeRebateGroup()
    {
        return $this->container['volume_rebate_group'];
    }

    /**
     * Sets volume_rebate_group
     *
     * @param string|null $volume_rebate_group Volume rebate group
     *
     * @return self
     */
    public function setVolumeRebateGroup($volume_rebate_group)
    {
        if (is_null($volume_rebate_group)) {
            throw new \InvalidArgumentException('non-nullable volume_rebate_group cannot be null');
        }
        if ((mb_strlen($volume_rebate_group) > 2)) {
            throw new \InvalidArgumentException('invalid length for $volume_rebate_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['volume_rebate_group'] = $volume_rebate_group;

        return $this;
    }

    /**
     * Gets cash_discount_is_deductible
     *
     * @return bool|null
     */
    public function getCashDiscountIsDeductible()
    {
        return $this->container['cash_discount_is_deductible'];
    }

    /**
     * Sets cash_discount_is_deductible
     *
     * @param bool|null $cash_discount_is_deductible Cash Discount Indicator
     *
     * @return self
     */
    public function setCashDiscountIsDeductible($cash_discount_is_deductible)
    {
        if (is_null($cash_discount_is_deductible)) {
            throw new \InvalidArgumentException('non-nullable cash_discount_is_deductible cannot be null');
        }
        $this->container['cash_discount_is_deductible'] = $cash_discount_is_deductible;

        return $this;
    }

    /**
     * Gets rounding_profile
     *
     * @return string|null
     */
    public function getRoundingProfile()
    {
        return $this->container['rounding_profile'];
    }

    /**
     * Sets rounding_profile
     *
     * @param string|null $rounding_profile rounding_profile
     *
     * @return self
     */
    public function setRoundingProfile($rounding_profile)
    {
        if (is_null($rounding_profile)) {
            throw new \InvalidArgumentException('non-nullable rounding_profile cannot be null');
        }
        if ((mb_strlen($rounding_profile) > 4)) {
            throw new \InvalidArgumentException('invalid length for $rounding_profile when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['rounding_profile'] = $rounding_profile;

        return $this;
    }

    /**
     * Gets variable_sales_unit_is_not_allowed
     *
     * @return bool|null
     */
    public function getVariableSalesUnitIsNotAllowed()
    {
        return $this->container['variable_sales_unit_is_not_allowed'];
    }

    /**
     * Sets variable_sales_unit_is_not_allowed
     *
     * @param bool|null $variable_sales_unit_is_not_allowed Variable Sales Unit Not Allowed
     *
     * @return self
     */
    public function setVariableSalesUnitIsNotAllowed($variable_sales_unit_is_not_allowed)
    {
        if (is_null($variable_sales_unit_is_not_allowed)) {
            throw new \InvalidArgumentException('non-nullable variable_sales_unit_is_not_allowed cannot be null');
        }
        $this->container['variable_sales_unit_is_not_allowed'] = $variable_sales_unit_is_not_allowed;

        return $this;
    }

    /**
     * Gets product_commission_group
     *
     * @return string|null
     */
    public function getProductCommissionGroup()
    {
        return $this->container['product_commission_group'];
    }

    /**
     * Sets product_commission_group
     *
     * @param string|null $product_commission_group product_commission_group
     *
     * @return self
     */
    public function setProductCommissionGroup($product_commission_group)
    {
        if (is_null($product_commission_group)) {
            throw new \InvalidArgumentException('non-nullable product_commission_group cannot be null');
        }
        if ((mb_strlen($product_commission_group) > 2)) {
            throw new \InvalidArgumentException('invalid length for $product_commission_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 2.');
        }

        $this->container['product_commission_group'] = $product_commission_group;

        return $this;
    }

    /**
     * Gets pricing_reference_product
     *
     * @return string|null
     */
    public function getPricingReferenceProduct()
    {
        return $this->container['pricing_reference_product'];
    }

    /**
     * Sets pricing_reference_product
     *
     * @param string|null $pricing_reference_product Pricing Reference Material
     *
     * @return self
     */
    public function setPricingReferenceProduct($pricing_reference_product)
    {
        if (is_null($pricing_reference_product)) {
            throw new \InvalidArgumentException('non-nullable pricing_reference_product cannot be null');
        }
        if ((mb_strlen($pricing_reference_product) > 18)) {
            throw new \InvalidArgumentException('invalid length for $pricing_reference_product when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 18.');
        }

        $this->container['pricing_reference_product'] = $pricing_reference_product;

        return $this;
    }

    /**
     * Gets product_has_attribute_id01
     *
     * @return bool|null
     */
    public function getProductHasAttributeId01()
    {
        return $this->container['product_has_attribute_id01'];
    }

    /**
     * Sets product_has_attribute_id01
     *
     * @param bool|null $product_has_attribute_id01 ID for product attribute 1
     *
     * @return self
     */
    public function setProductHasAttributeId01($product_has_attribute_id01)
    {
        if (is_null($product_has_attribute_id01)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id01 cannot be null');
        }
        $this->container['product_has_attribute_id01'] = $product_has_attribute_id01;

        return $this;
    }

    /**
     * Gets product_has_attribute_id02
     *
     * @return bool|null
     */
    public function getProductHasAttributeId02()
    {
        return $this->container['product_has_attribute_id02'];
    }

    /**
     * Sets product_has_attribute_id02
     *
     * @param bool|null $product_has_attribute_id02 ID for product attribute 2
     *
     * @return self
     */
    public function setProductHasAttributeId02($product_has_attribute_id02)
    {
        if (is_null($product_has_attribute_id02)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id02 cannot be null');
        }
        $this->container['product_has_attribute_id02'] = $product_has_attribute_id02;

        return $this;
    }

    /**
     * Gets product_has_attribute_id03
     *
     * @return bool|null
     */
    public function getProductHasAttributeId03()
    {
        return $this->container['product_has_attribute_id03'];
    }

    /**
     * Sets product_has_attribute_id03
     *
     * @param bool|null $product_has_attribute_id03 ID for product attribute 3
     *
     * @return self
     */
    public function setProductHasAttributeId03($product_has_attribute_id03)
    {
        if (is_null($product_has_attribute_id03)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id03 cannot be null');
        }
        $this->container['product_has_attribute_id03'] = $product_has_attribute_id03;

        return $this;
    }

    /**
     * Gets product_has_attribute_id04
     *
     * @return bool|null
     */
    public function getProductHasAttributeId04()
    {
        return $this->container['product_has_attribute_id04'];
    }

    /**
     * Sets product_has_attribute_id04
     *
     * @param bool|null $product_has_attribute_id04 ID for product attribute 4
     *
     * @return self
     */
    public function setProductHasAttributeId04($product_has_attribute_id04)
    {
        if (is_null($product_has_attribute_id04)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id04 cannot be null');
        }
        $this->container['product_has_attribute_id04'] = $product_has_attribute_id04;

        return $this;
    }

    /**
     * Gets product_has_attribute_id05
     *
     * @return bool|null
     */
    public function getProductHasAttributeId05()
    {
        return $this->container['product_has_attribute_id05'];
    }

    /**
     * Sets product_has_attribute_id05
     *
     * @param bool|null $product_has_attribute_id05 ID for product attribute 5
     *
     * @return self
     */
    public function setProductHasAttributeId05($product_has_attribute_id05)
    {
        if (is_null($product_has_attribute_id05)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id05 cannot be null');
        }
        $this->container['product_has_attribute_id05'] = $product_has_attribute_id05;

        return $this;
    }

    /**
     * Gets product_has_attribute_id06
     *
     * @return bool|null
     */
    public function getProductHasAttributeId06()
    {
        return $this->container['product_has_attribute_id06'];
    }

    /**
     * Sets product_has_attribute_id06
     *
     * @param bool|null $product_has_attribute_id06 ID for product attribute 6
     *
     * @return self
     */
    public function setProductHasAttributeId06($product_has_attribute_id06)
    {
        if (is_null($product_has_attribute_id06)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id06 cannot be null');
        }
        $this->container['product_has_attribute_id06'] = $product_has_attribute_id06;

        return $this;
    }

    /**
     * Gets product_has_attribute_id07
     *
     * @return bool|null
     */
    public function getProductHasAttributeId07()
    {
        return $this->container['product_has_attribute_id07'];
    }

    /**
     * Sets product_has_attribute_id07
     *
     * @param bool|null $product_has_attribute_id07 ID for product attribute 7
     *
     * @return self
     */
    public function setProductHasAttributeId07($product_has_attribute_id07)
    {
        if (is_null($product_has_attribute_id07)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id07 cannot be null');
        }
        $this->container['product_has_attribute_id07'] = $product_has_attribute_id07;

        return $this;
    }

    /**
     * Gets product_has_attribute_id08
     *
     * @return bool|null
     */
    public function getProductHasAttributeId08()
    {
        return $this->container['product_has_attribute_id08'];
    }

    /**
     * Sets product_has_attribute_id08
     *
     * @param bool|null $product_has_attribute_id08 ID for product attribute 8
     *
     * @return self
     */
    public function setProductHasAttributeId08($product_has_attribute_id08)
    {
        if (is_null($product_has_attribute_id08)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id08 cannot be null');
        }
        $this->container['product_has_attribute_id08'] = $product_has_attribute_id08;

        return $this;
    }

    /**
     * Gets product_has_attribute_id09
     *
     * @return bool|null
     */
    public function getProductHasAttributeId09()
    {
        return $this->container['product_has_attribute_id09'];
    }

    /**
     * Sets product_has_attribute_id09
     *
     * @param bool|null $product_has_attribute_id09 ID for product attribute 9
     *
     * @return self
     */
    public function setProductHasAttributeId09($product_has_attribute_id09)
    {
        if (is_null($product_has_attribute_id09)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id09 cannot be null');
        }
        $this->container['product_has_attribute_id09'] = $product_has_attribute_id09;

        return $this;
    }

    /**
     * Gets product_has_attribute_id10
     *
     * @return bool|null
     */
    public function getProductHasAttributeId10()
    {
        return $this->container['product_has_attribute_id10'];
    }

    /**
     * Sets product_has_attribute_id10
     *
     * @param bool|null $product_has_attribute_id10 ID for product attribute 10
     *
     * @return self
     */
    public function setProductHasAttributeId10($product_has_attribute_id10)
    {
        if (is_null($product_has_attribute_id10)) {
            throw new \InvalidArgumentException('non-nullable product_has_attribute_id10 cannot be null');
        }
        $this->container['product_has_attribute_id10'] = $product_has_attribute_id10;

        return $this;
    }

    /**
     * Gets prod_is_entlmnt_rlvt
     *
     * @return bool|null
     */
    public function getProdIsEntlmntRlvt()
    {
        return $this->container['prod_is_entlmnt_rlvt'];
    }

    /**
     * Sets prod_is_entlmnt_rlvt
     *
     * @param bool|null $prod_is_entlmnt_rlvt Relevant for Entitlement Generation
     *
     * @return self
     */
    public function setProdIsEntlmntRlvt($prod_is_entlmnt_rlvt)
    {
        if (is_null($prod_is_entlmnt_rlvt)) {
            throw new \InvalidArgumentException('non-nullable prod_is_entlmnt_rlvt cannot be null');
        }
        $this->container['prod_is_entlmnt_rlvt'] = $prod_is_entlmnt_rlvt;

        return $this;
    }

    /**
     * Gets base_unit
     *
     * @return string|null
     */
    public function getBaseUnit()
    {
        return $this->container['base_unit'];
    }

    /**
     * Sets base_unit
     *
     * @param string|null $base_unit base_unit
     *
     * @return self
     */
    public function setBaseUnit($base_unit)
    {
        if (is_null($base_unit)) {
            throw new \InvalidArgumentException('non-nullable base_unit cannot be null');
        }
        if ((mb_strlen($base_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $base_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['base_unit'] = $base_unit;

        return $this;
    }

    /**
     * Gets base_iso_unit
     *
     * @return string|null
     */
    public function getBaseIsoUnit()
    {
        return $this->container['base_iso_unit'];
    }

    /**
     * Sets base_iso_unit
     *
     * @param string|null $base_iso_unit ISO Code for Unit of Measurement
     *
     * @return self
     */
    public function setBaseIsoUnit($base_iso_unit)
    {
        if (is_null($base_iso_unit)) {
            throw new \InvalidArgumentException('non-nullable base_iso_unit cannot be null');
        }
        if ((mb_strlen($base_iso_unit) > 3)) {
            throw new \InvalidArgumentException('invalid length for $base_iso_unit when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductSalesDeliveryTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['base_iso_unit'] = $base_iso_unit;

        return $this;
    }

    /**
     * Gets sap__messages
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]|null
     */
    public function getSapMessages()
    {
        return $this->container['sap__messages'];
    }

    /**
     * Sets sap__messages
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]|null $sap__messages sap__messages
     *
     * @return self
     */
    public function setSapMessages($sap__messages)
    {
        if (is_null($sap__messages)) {
            throw new \InvalidArgumentException('non-nullable sap__messages cannot be null');
        }
        $this->container['sap__messages'] = $sap__messages;

        return $this;
    }

    /**
     * Gets _prod_sales_delivery_sales_tax
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProdSalesDeliverySalesTaxTypeCreate[]|null
     */
    public function _getProdSalesDeliverySalesTax()
    {
    return $this->container['_prod_sales_delivery_sales_tax'];
    }

    /**
     * Sets _prod_sales_delivery_sales_tax
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProdSalesDeliverySalesTaxTypeCreate[]|null $_prod_sales_delivery_sales_tax _prod_sales_delivery_sales_tax
     *
     * @return self
     */
    public function _setProdSalesDeliverySalesTax($_prod_sales_delivery_sales_tax)
    {
        if (is_null($_prod_sales_delivery_sales_tax)) {
            throw new \InvalidArgumentException('non-nullable _prod_sales_delivery_sales_tax cannot be null');
        }
        $this->container['_prod_sales_delivery_sales_tax'] = $_prod_sales_delivery_sales_tax;

        return $this;
    }

    /**
     * Gets _product
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate|null
     */
    public function _getProduct()
    {
    return $this->container['_product'];
    }

    /**
     * Sets _product
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate|null $_product _product
     *
     * @return self
     */
    public function _setProduct($_product)
    {
        if (is_null($_product)) {
            throw new \InvalidArgumentException('non-nullable _product cannot be null');
        }
        $this->container['_product'] = $_product;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


