<?php
/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Product
 *
 * The service supports following operations: GET, POST, PUT, PATCH, DELETE. You can create, read, update, and delete product master data at the entity level.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\ProductODV4\Model;

use \ArrayAccess;
use \BeLenka\SAP\ProductODV4\ObjectSerializer;

/**
 * ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\ProductODV4
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'com.sap.gateway.srvd_a2x.api_product_2.v0001.ProductPlantProcurement_Type-create';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'is_auto_pur_ord_creation_allowed' => 'bool',
        'is_source_list_required' => 'bool',
        'just_in_time_delivery_schedule_code' => 'string',
        'purchasing_group' => 'string',
        'source_of_supply_category' => 'string',
        'sap__messages' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]',
        '_product' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate',
        '_product_plant' => '\BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'is_auto_pur_ord_creation_allowed' => null,
        'is_source_list_required' => null,
        'just_in_time_delivery_schedule_code' => null,
        'purchasing_group' => null,
        'source_of_supply_category' => null,
        'sap__messages' => null,
        '_product' => null,
        '_product_plant' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'is_auto_pur_ord_creation_allowed' => false,
		'is_source_list_required' => false,
		'just_in_time_delivery_schedule_code' => false,
		'purchasing_group' => false,
		'source_of_supply_category' => false,
		'sap__messages' => false,
		'_product' => false,
		'_product_plant' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'is_auto_pur_ord_creation_allowed' => 'IsAutoPurOrdCreationAllowed',
        'is_source_list_required' => 'IsSourceListRequired',
        'just_in_time_delivery_schedule_code' => 'JustInTimeDeliveryScheduleCode',
        'purchasing_group' => 'PurchasingGroup',
        'source_of_supply_category' => 'SourceOfSupplyCategory',
        'sap__messages' => 'SAP__Messages',
        '_product' => '_Product',
        '_product_plant' => '_ProductPlant'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'is_auto_pur_ord_creation_allowed' => 'setIsAutoPurOrdCreationAllowed',
        'is_source_list_required' => 'setIsSourceListRequired',
        'just_in_time_delivery_schedule_code' => 'setJustInTimeDeliveryScheduleCode',
        'purchasing_group' => 'setPurchasingGroup',
        'source_of_supply_category' => 'setSourceOfSupplyCategory',
        'sap__messages' => 'setSapMessages',
        '_product' => '_setProduct',
        '_product_plant' => '_setProductPlant'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'is_auto_pur_ord_creation_allowed' => 'getIsAutoPurOrdCreationAllowed',
        'is_source_list_required' => 'getIsSourceListRequired',
        'just_in_time_delivery_schedule_code' => 'getJustInTimeDeliveryScheduleCode',
        'purchasing_group' => 'getPurchasingGroup',
        'source_of_supply_category' => 'getSourceOfSupplyCategory',
        'sap__messages' => 'getSapMessages',
        '_product' => '_getProduct',
        '_product_plant' => '_getProductPlant'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('is_auto_pur_ord_creation_allowed', $data ?? [], null);
        $this->setIfExists('is_source_list_required', $data ?? [], null);
        $this->setIfExists('just_in_time_delivery_schedule_code', $data ?? [], null);
        $this->setIfExists('purchasing_group', $data ?? [], null);
        $this->setIfExists('source_of_supply_category', $data ?? [], null);
        $this->setIfExists('sap__messages', $data ?? [], null);
        $this->setIfExists('_product', $data ?? [], null);
        $this->setIfExists('_product_plant', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['just_in_time_delivery_schedule_code']) && (mb_strlen($this->container['just_in_time_delivery_schedule_code']) > 1)) {
            $invalidProperties[] = "invalid value for 'just_in_time_delivery_schedule_code', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['purchasing_group']) && (mb_strlen($this->container['purchasing_group']) > 3)) {
            $invalidProperties[] = "invalid value for 'purchasing_group', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['source_of_supply_category']) && (mb_strlen($this->container['source_of_supply_category']) > 1)) {
            $invalidProperties[] = "invalid value for 'source_of_supply_category', the character length must be smaller than or equal to 1.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets is_auto_pur_ord_creation_allowed
     *
     * @return bool|null
     */
    public function getIsAutoPurOrdCreationAllowed()
    {
        return $this->container['is_auto_pur_ord_creation_allowed'];
    }

    /**
     * Sets is_auto_pur_ord_creation_allowed
     *
     * @param bool|null $is_auto_pur_ord_creation_allowed Indicator: \"automatic purchase order allowed\"
     *
     * @return self
     */
    public function setIsAutoPurOrdCreationAllowed($is_auto_pur_ord_creation_allowed)
    {
        if (is_null($is_auto_pur_ord_creation_allowed)) {
            throw new \InvalidArgumentException('non-nullable is_auto_pur_ord_creation_allowed cannot be null');
        }
        $this->container['is_auto_pur_ord_creation_allowed'] = $is_auto_pur_ord_creation_allowed;

        return $this;
    }

    /**
     * Gets is_source_list_required
     *
     * @return bool|null
     */
    public function getIsSourceListRequired()
    {
        return $this->container['is_source_list_required'];
    }

    /**
     * Sets is_source_list_required
     *
     * @param bool|null $is_source_list_required Indicator: Source list requirement
     *
     * @return self
     */
    public function setIsSourceListRequired($is_source_list_required)
    {
        if (is_null($is_source_list_required)) {
            throw new \InvalidArgumentException('non-nullable is_source_list_required cannot be null');
        }
        $this->container['is_source_list_required'] = $is_source_list_required;

        return $this;
    }

    /**
     * Gets just_in_time_delivery_schedule_code
     *
     * @return string|null
     */
    public function getJustInTimeDeliveryScheduleCode()
    {
        return $this->container['just_in_time_delivery_schedule_code'];
    }

    /**
     * Sets just_in_time_delivery_schedule_code
     *
     * @param string|null $just_in_time_delivery_schedule_code JIT Delivery Schedules
     *
     * @return self
     */
    public function setJustInTimeDeliveryScheduleCode($just_in_time_delivery_schedule_code)
    {
        if (is_null($just_in_time_delivery_schedule_code)) {
            throw new \InvalidArgumentException('non-nullable just_in_time_delivery_schedule_code cannot be null');
        }
        if ((mb_strlen($just_in_time_delivery_schedule_code) > 1)) {
            throw new \InvalidArgumentException('invalid length for $just_in_time_delivery_schedule_code when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate., must be smaller than or equal to 1.');
        }

        $this->container['just_in_time_delivery_schedule_code'] = $just_in_time_delivery_schedule_code;

        return $this;
    }

    /**
     * Gets purchasing_group
     *
     * @return string|null
     */
    public function getPurchasingGroup()
    {
        return $this->container['purchasing_group'];
    }

    /**
     * Sets purchasing_group
     *
     * @param string|null $purchasing_group purchasing_group
     *
     * @return self
     */
    public function setPurchasingGroup($purchasing_group)
    {
        if (is_null($purchasing_group)) {
            throw new \InvalidArgumentException('non-nullable purchasing_group cannot be null');
        }
        if ((mb_strlen($purchasing_group) > 3)) {
            throw new \InvalidArgumentException('invalid length for $purchasing_group when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['purchasing_group'] = $purchasing_group;

        return $this;
    }

    /**
     * Gets source_of_supply_category
     *
     * @return string|null
     */
    public function getSourceOfSupplyCategory()
    {
        return $this->container['source_of_supply_category'];
    }

    /**
     * Sets source_of_supply_category
     *
     * @param string|null $source_of_supply_category Source of Supply
     *
     * @return self
     */
    public function setSourceOfSupplyCategory($source_of_supply_category)
    {
        if (is_null($source_of_supply_category)) {
            throw new \InvalidArgumentException('non-nullable source_of_supply_category cannot be null');
        }
        if ((mb_strlen($source_of_supply_category) > 1)) {
            throw new \InvalidArgumentException('invalid length for $source_of_supply_category when calling ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantProcurementTypeCreate., must be smaller than or equal to 1.');
        }

        $this->container['source_of_supply_category'] = $source_of_supply_category;

        return $this;
    }

    /**
     * Gets sap__messages
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]|null
     */
    public function getSapMessages()
    {
        return $this->container['sap__messages'];
    }

    /**
     * Sets sap__messages
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001SAPMessageCreate[]|null $sap__messages sap__messages
     *
     * @return self
     */
    public function setSapMessages($sap__messages)
    {
        if (is_null($sap__messages)) {
            throw new \InvalidArgumentException('non-nullable sap__messages cannot be null');
        }
        $this->container['sap__messages'] = $sap__messages;

        return $this;
    }

    /**
     * Gets _product
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate|null
     */
    public function _getProduct()
    {
    return $this->container['_product'];
    }

    /**
     * Sets _product
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductTypeCreate|null $_product _product
     *
     * @return self
     */
    public function _setProduct($_product)
    {
        if (is_null($_product)) {
            throw new \InvalidArgumentException('non-nullable _product cannot be null');
        }
        $this->container['_product'] = $_product;

        return $this;
    }

    /**
     * Gets _product_plant
     *
     * @return \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate|null
     */
    public function _getProductPlant()
    {
    return $this->container['_product_plant'];
    }

    /**
     * Sets _product_plant
     *
     * @param \BeLenka\SAP\ProductODV4\Model\ComSapGatewaySrvdA2xApiProduct2V0001ProductPlantTypeCreate|null $_product_plant _product_plant
     *
     * @return self
     */
    public function _setProductPlant($_product_plant)
    {
        if (is_null($_product_plant)) {
            throw new \InvalidArgumentException('non-nullable _product_plant cannot be null');
        }
        $this->container['_product_plant'] = $_product_plant;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


